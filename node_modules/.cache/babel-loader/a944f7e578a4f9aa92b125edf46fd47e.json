{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\nvar useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em'\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem'\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important'\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem'\n  }\n});\nvar initialData = {\n  name: 'Amanda',\n  description: 'Confirm if you have passed the subject\\nHereby ...',\n  done: true,\n  recurrence: 'Daily',\n  rating: 3\n};\nvar renderers = [].concat(_toConsumableArray(materialRenderers), [//register custom renderers\n{\n  tester: ratingControlTester,\n  renderer: RatingControl\n}]);\n\nvar App = function App() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var stringifiedData = useMemo(function () {\n    return JSON.stringify(data, null, 2);\n  }, [data]);\n\n  var clearData = function clearData() {\n    setData({});\n  };\n\n  var addNewField = function addNewField() {\n    setData({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      margin: \"20px\",\n      onClick: addNewField(),\n      children: \"Add New Form Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: 'center',\n      spacing: 1,\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h4',\n          className: classes.title,\n          children: \"Bound data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.resetButton,\n          onClick: clearData,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Clear data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h4',\n          className: classes.title,\n          children: \"Rendered form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.demoform,\n          children: /*#__PURE__*/_jsxDEV(JsonForms, {\n            schema: schema,\n            uischema: uischema,\n            data: data,\n            renderers: renderers,\n            cells: materialCells,\n            onChange: function onChange(_ref) {\n              var errors = _ref.errors,\n                  data = _ref.data;\n              return setData(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"tPNmMC6DFnVdnHJULI3mOR2+Sas=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx"],"names":["Fragment","useState","useMemo","JsonForms","Grid","Button","Typography","schema","uischema","materialCells","materialRenderers","RatingControl","ratingControlTester","makeStyles","useStyles","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialData","name","description","done","recurrence","rating","renderers","tester","renderer","App","classes","data","setData","stringifiedData","JSON","stringify","clearData","addNewField","errors"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SACEC,aADF,EAEEC,iBAFF,QAGO,+BAHP;AAIA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,IAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,KADA;AAETC,IAAAA,KAAK,EAAE;AAFE,GADgB;AAK3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELH,IAAAA,OAAO,EAAE;AAFJ,GALoB;AAS3BI,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,cAAc,EAAE,QAFL;AAGXC,IAAAA,YAAY,EAAE,QAHH;AAIXC,IAAAA,eAAe,EAAE,SAJN;AAKXC,IAAAA,YAAY,EAAE;AALH,GATc;AAgB3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,iBADG;AAEXN,IAAAA,OAAO,EAAE;AAFE,GAhBc;AAoB3BO,EAAAA,QAAQ,EAAE;AACRD,IAAAA,MAAM,EAAE,MADA;AAERX,IAAAA,OAAO,EAAE;AAFD;AApBiB,CAAD,CAA5B;AA0BA,IAAMa,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,QADY;AAElBC,EAAAA,WAAW,EAAE,oDAFK;AAGlBC,EAAAA,IAAI,EAAE,IAHY;AAIlBC,EAAAA,UAAU,EAAE,OAJM;AAKlBC,EAAAA,MAAM,EAAE;AALU,CAApB;AAQA,IAAMC,SAAS,gCACVzB,iBADU,IAEb;AACA;AAAE0B,EAAAA,MAAM,EAAExB,mBAAV;AAA+ByB,EAAAA,QAAQ,EAAE1B;AAAzC,CAHa,EAAf;;AAMA,IAAM2B,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAChB,MAAMC,OAAO,GAAGzB,SAAS,EAAzB;;AADgB,kBAEQb,QAAQ,CAAM4B,WAAN,CAFhB;AAAA;AAAA,MAETW,IAFS;AAAA,MAEHC,OAFG;;AAGhB,MAAMC,eAAe,GAAGxC,OAAO,CAAC;AAAA,WAAMyC,IAAI,CAACC,SAAL,CAAeJ,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN;AAAA,GAAD,EAAsC,CAACA,IAAD,CAAtC,CAA/B;;AAEA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBJ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIE,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC1BL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFC;;AAIF,sBACE,QAAC,QAAD;AAAA,4BACM;AACE,MAAA,MAAM,EAAC,MADT;AAEE,MAAA,OAAO,EAAEK,WAAW,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADN,eAOE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,cAAc,EAAE,QAFlB;AAGE,MAAA,OAAO,EAAE,CAHX;AAIE,MAAA,SAAS,EAAEP,OAAO,CAACxB,SAJrB;AAAA,8BAME,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,IAArB;AAA2B,UAAA,SAAS,EAAEwB,OAAO,CAACrB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAK,UAAA,SAAS,EAAEqB,OAAO,CAACnB,WAAxB;AAAA,iCACE;AAAK,YAAA,EAAE,EAAC,WAAR;AAAA,sBAAqBsB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF,eAOE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEH,OAAO,CAACb,WADrB;AAEE,UAAA,OAAO,EAAEmB,SAFX;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAsBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,IAArB;AAA2B,UAAA,SAAS,EAAEN,OAAO,CAACrB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAK,UAAA,SAAS,EAAEqB,OAAO,CAACX,QAAxB;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,MAAM,EAAErB,MADV;AAEE,YAAA,QAAQ,EAAEC,QAFZ;AAGE,YAAA,IAAI,EAAEgC,IAHR;AAIE,YAAA,SAAS,EAAEL,SAJb;AAKE,YAAA,KAAK,EAAE1B,aALT;AAME,YAAA,QAAQ,EAAE;AAAA,kBAAGsC,MAAH,QAAGA,MAAH;AAAA,kBAAWP,IAAX,QAAWA,IAAX;AAAA,qBAAsBC,OAAO,CAACD,IAAD,CAA7B;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgDD,CA7DD;;GAAMF,G;UACYxB,S;;;KADZwB,G;AA+DN,eAAeA,GAAf","sourcesContent":["import { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport logo from './logo.svg';\nimport './App.css';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n});\n\nconst initialData = {\n  name: 'Amanda',\n  description: 'Confirm if you have passed the subject\\nHereby ...',\n  done: true,\n  recurrence: 'Daily',\n  rating: 3,\n};\n\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<any>(initialData);\n  const stringifiedData = useMemo(() => JSON.stringify(data, null, 2), [data]);\n\n  const clearData = () => {\n    setData({});\n  };\n\n    const addNewField = () => {\n    setData({});\n  };\n\n  return (\n    <Fragment>\n          <button\n            margin='20px'\n            onClick={addNewField()}\n          >\n            Add New Form Field\n          </button>\n      <Grid\n        container\n        justifyContent={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid item sm={6}>\n          <Typography variant={'h4'} className={classes.title}>\n            Bound data\n          </Typography>\n          <div className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedData}</pre>\n          </div>\n          <Button\n            className={classes.resetButton}\n            onClick={clearData}\n            color='primary'\n            variant='contained'\n          >\n            Clear data\n          </Button>\n        </Grid>\n        <Grid item sm={6}>\n          <Typography variant={'h4'} className={classes.title}>\n            Rendered form\n          </Typography>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={schema}\n              uischema={uischema}\n              data={data}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => setData(data)}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}