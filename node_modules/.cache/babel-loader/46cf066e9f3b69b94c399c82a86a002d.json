{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar move = function move(array, index, delta) {\n  var newIndex = index + delta;\n\n  if (newIndex < 0 || newIndex >= array.length) {\n    return;\n  } // Already at the top or bottom.\n\n\n  var indexes = [index, newIndex].sort(function (a, b) {\n    return a - b;\n  }); // Sort the indixes\n\n  array.splice(indexes[0], 2, array[indexes[1]], array[indexes[0]]);\n};\n\nvar moveUp = function moveUp(array, toMove) {\n  move(array, toMove, -1);\n};\n\nexports.moveUp = moveUp;\n\nvar moveDown = function moveDown(array, toMove) {\n  move(array, toMove, 1);\n};\n\nexports.moveDown = moveDown;","map":{"version":3,"sources":["../../src/util/array.ts"],"names":[],"mappings":";;;;;;AAAA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,KAAD,EAAe,KAAf,EAA8B,KAA9B,EAA2C;AACtD,MAAM,QAAQ,GAAW,KAAK,GAAG,KAAjC;;AACA,MAAI,QAAQ,GAAG,CAAX,IAAgB,QAAQ,IAAI,KAAK,CAAC,MAAtC,EAA8C;AAC5C;AACD,GAJqD,CAIpD;;;AACF,MAAM,OAAO,GAAa,CAAC,KAAD,EAAQ,QAAR,EAAkB,IAAlB,CAAuB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,WAAA,CAAC,GAAD,CAAA;AAAK,GAAtC,CAA1B,CALsD,CAKa;;AACnE,EAAA,KAAK,CAAC,MAAN,CAAa,OAAO,CAAC,CAAD,CAApB,EAAyB,CAAzB,EAA4B,KAAK,CAAC,OAAO,CAAC,CAAD,CAAR,CAAjC,EAA+C,KAAK,CAAC,OAAO,CAAC,CAAD,CAAR,CAApD;AACD,CAPD;;AASA,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,KAAD,EAAe,MAAf,EAA6B;AAC1C,EAAA,IAAI,CAAC,KAAD,EAAQ,MAAR,EAAgB,CAAC,CAAjB,CAAJ;AACD,CAFD;;AAQS,OAAA,CAAA,MAAA,GAAA,MAAA;;AAJT,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,KAAD,EAAe,MAAf,EAA6B;AAC5C,EAAA,IAAI,CAAC,KAAD,EAAQ,MAAR,EAAgB,CAAhB,CAAJ;AACD,CAFD;;AAIiB,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar move = function (array, index, delta) {\n    var newIndex = index + delta;\n    if (newIndex < 0 || newIndex >= array.length) {\n        return;\n    } // Already at the top or bottom.\n    var indexes = [index, newIndex].sort(function (a, b) { return a - b; }); // Sort the indixes\n    array.splice(indexes[0], 2, array[indexes[1]], array[indexes[0]]);\n};\nvar moveUp = function (array, toMove) {\n    move(array, toMove, -1);\n};\nexports.moveUp = moveUp;\nvar moveDown = function (array, toMove) {\n    move(array, toMove, 1);\n};\nexports.moveDown = moveDown;\n//# sourceMappingURL=array.js.map"]},"metadata":{},"sourceType":"script"}