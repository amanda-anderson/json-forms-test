{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/CustomToggle/Toggle.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Toggle as ToggleCl, Label, Box, IconTooltip } from 'cl2-component-library';\nexport var Toggle = function Toggle(_ref) {\n  _s();\n\n  var id = _ref.id,\n      value = _ref.value,\n      updateValue = _ref.updateValue,\n      label = _ref.label;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"#/properties/toggle\",\n    className: \"toggle\",\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleCl, {\n        label: label.toString(),\n        checked: checked,\n        onChange: function onChange() {\n          updateValue(!value);\n          setChecked(!value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(IconTooltip, {\n        content: \"Tooltip content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Toggle, \"PIOT3rxjSXyqDSRQDxwPOl4hsdY=\");\n\n_c = Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/CustomToggle/Toggle.tsx"],"names":["React","useState","Toggle","ToggleCl","Label","Box","IconTooltip","id","value","updateValue","label","checked","setChecked","toString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MAAM,IAAIC,QADZ,EAEEC,KAFF,EAGEC,GAHF,EAIEC,WAJF,QAKO,uBALP;AAeA,OAAO,IAAMJ,MAA6B,GAAG,SAAhCA,MAAgC,OAKvC;AAAA;;AAAA,MAJJK,EAII,QAJJA,EAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,KACI,QADJA,KACI;;AAAA,kBAC0BT,QAAQ,CAAUO,KAAV,CADlC;AAAA;AAAA,MACGG,OADH;AAAA,MACYC,UADZ;;AAGJ,sBACE;AAAK,IAAA,EAAE,EAAC,qBAAR;AAA8B,IAAA,SAAS,EAAC,QAAxC;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEF,KAAK,CAACG,QAAN,EADT;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,QAAQ,EAAE,oBAAM;AACdF,UAAAA,WAAW,CAAC,CAACD,KAAF,CAAX;AACAI,UAAAA,UAAU,CAAC,CAACJ,KAAF,CAAV;AACD;AANH;AAAA;AAAA;AAAA;AAAA,eADF,eASE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CAxBM;;GAAMN,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Toggle as ToggleCl,\n  Label,\n  Box,\n  IconTooltip,\n} from 'cl2-component-library';\nimport { Labels } from '@jsonforms/core';\n\ninterface RatingProps {\n  id?: string;\n  value: boolean;\n  label: string | Labels;\n  updateValue: (newValue: boolean) => void;\n}\n\nexport const Toggle: React.FC<RatingProps> = ({\n  id,\n  value,\n  updateValue,\n  label,\n}) => {\n  const [checked, setChecked] = useState<boolean>(value);\n\n  return (\n    <div id='#/properties/toggle' className='toggle'>\n      <Label>Rating</Label>\n      <Box display='flex'>\n        <ToggleCl\n          label={label.toString()}\n          checked={checked}\n          onChange={() => {\n            updateValue(!value);\n            setChecked(!value);\n          }}\n        />\n        <IconTooltip content='Tooltip content' />\n      </Box>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}