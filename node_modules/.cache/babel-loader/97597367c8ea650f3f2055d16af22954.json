{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar validate_1 = require(\"../../compile/validate\");\n\nvar code_1 = require(\"../code\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar additionalProperties_1 = require(\"./additionalProperties\");\n\nvar def = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n\n  code(cxt) {\n    var gen = cxt.gen,\n        schema = cxt.schema,\n        parentSchema = cxt.parentSchema,\n        data = cxt.data,\n        it = cxt.it;\n\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n    }\n\n    var allProps = (0, code_1.allSchemaProperties)(schema);\n\n    var _iterator = _createForOfIteratorHelper(allProps),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        it.definedProperties.add(prop);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n    }\n\n    var properties = allProps.filter(function (p) {\n      return !(0, util_1.alwaysValidSchema)(it, schema[p]);\n    });\n    if (properties.length === 0) return;\n    var valid = gen.name(\"valid\");\n\n    var _iterator2 = _createForOfIteratorHelper(properties),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _prop = _step2.value;\n\n        if (hasDefault(_prop)) {\n          applyPropertySchema(_prop);\n        } else {\n          gen.if((0, code_1.propertyInData)(gen, data, _prop, it.opts.ownProperties));\n          applyPropertySchema(_prop);\n          if (!it.allErrors) gen.else().var(valid, true);\n          gen.endIf();\n        }\n\n        cxt.it.definedProperties.add(_prop);\n        cxt.ok(valid);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    function hasDefault(prop) {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n    }\n\n    function applyPropertySchema(prop) {\n      cxt.subschema({\n        keyword: \"properties\",\n        schemaProp: prop,\n        dataProp: prop\n      }, valid);\n    }\n  }\n\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/properties.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map"]},"metadata":{},"sourceType":"script"}