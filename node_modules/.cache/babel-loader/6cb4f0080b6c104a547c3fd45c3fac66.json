{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Object.keys(\", \").length \", \" \", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"{limit: \", \"}\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"must NOT have \", \" than \", \" properties\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar error = {\n  message(_ref) {\n    var keyword = _ref.keyword,\n        schemaCode = _ref.schemaCode;\n    var comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n    return (0, codegen_1.str)(_templateObject(), comp, schemaCode);\n  },\n\n  params: function params(_ref2) {\n    var schemaCode = _ref2.schemaCode;\n    return (0, codegen_1._)(_templateObject2(), schemaCode);\n  }\n};\nvar def = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n\n  code(cxt) {\n    var keyword = cxt.keyword,\n        data = cxt.data,\n        schemaCode = cxt.schemaCode;\n    var op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    cxt.fail$data((0, codegen_1._)(_templateObject3(), data, op, schemaCode));\n  }\n\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/validation/limitProperties.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAEA,IAAM,KAAK,GAA2B;AACpC,EAAA,OAAO,OAAsB;AAAA,QAApB,OAAoB,QAApB,OAAoB;AAAA,QAAX,UAAW,QAAX,UAAW;AAC3B,QAAM,IAAI,GAAG,OAAO,KAAK,eAAZ,GAA8B,MAA9B,GAAuC,OAApD;AACA,YAAO,GAAA,SAAA,CAAA,GAAP,qBAA2B,IAA3B,EAAwC,UAAxC;AACD,GAJmC;;AAKpC,EAAA,MAAM,EAAE;AAAA,QAAE,UAAF,SAAE,UAAF;AAAA,YAAkB,GAAA,SAAA,CAAA,CAAlB,sBAA8B,UAA9B;AAAA;AAL4B,CAAtC;AAQA,IAAM,GAAG,GAA0B;AACjC,EAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,eAAlB,CADwB;AAEjC,EAAA,IAAI,EAAE,QAF2B;AAGjC,EAAA,UAAU,EAAE,QAHqB;AAIjC,EAAA,KAAK,EAAE,IAJ0B;AAKjC,EAAA,KALiC;;AAMjC,EAAA,IAAI,CAAC,GAAD,EAAgB;AAAA,QACX,OADW,GACkB,GADlB,CACX,OADW;AAAA,QACF,IADE,GACkB,GADlB,CACF,IADE;AAAA,QACI,UADJ,GACkB,GADlB,CACI,UADJ;AAElB,QAAM,EAAE,GAAG,OAAO,KAAK,eAAZ,GAA8B,SAAA,CAAA,SAAA,CAAU,EAAxC,GAA6C,SAAA,CAAA,SAAA,CAAU,EAAlE;AACA,IAAA,GAAG,CAAC,SAAJ,EAAc,GAAA,SAAA,CAAA,CAAd,sBAA8B,IAA9B,EAA8C,EAA9C,EAAoD,UAApD;AACD;;AAVgC,CAAnC;AAaA,OAAA,CAAA,OAAA,GAAe,GAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map"]},"metadata":{},"sourceType":"script"}