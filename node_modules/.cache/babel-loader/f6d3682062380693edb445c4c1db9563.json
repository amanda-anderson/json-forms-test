{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _taggedTemplateLiteral = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"delete \", \"[\", \"]\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \".test(\", \")\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \" === \", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \" === \", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"{additionalProperty: \", \"}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar code_1 = require(\"../code\");\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar names_1 = require(\"../../compile/names\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar error = {\n  message: \"must NOT have additional properties\",\n  params: function params(_ref) {\n    var _params = _ref.params;\n    return (0, codegen_1._)(_templateObject(), _params.additionalProperty);\n  }\n};\nvar def = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n\n  code(cxt) {\n    var gen = cxt.gen,\n        schema = cxt.schema,\n        parentSchema = cxt.parentSchema,\n        data = cxt.data,\n        errsCount = cxt.errsCount,\n        it = cxt.it;\n    /* istanbul ignore if */\n\n    if (!errsCount) throw new Error(\"ajv implementation error\");\n    var allErrors = it.allErrors,\n        opts = it.opts;\n    it.props = true;\n    if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema)) return;\n    var props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n    var patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n    checkAdditionalProperties();\n    cxt.ok((0, codegen_1._)(_templateObject2(), errsCount, names_1.default.errors));\n\n    function checkAdditionalProperties() {\n      gen.forIn(\"key\", data, function (key) {\n        if (!props.length && !patProps.length) additionalPropertyCode(key);else gen.if(isAdditional(key), function () {\n          return additionalPropertyCode(key);\n        });\n      });\n    }\n\n    function isAdditional(key) {\n      var definedProp;\n\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        var propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n        definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n      } else if (props.length) {\n        definedProp = (0, codegen_1.or).apply(void 0, _toConsumableArray(props.map(function (p) {\n          return (0, codegen_1._)(_templateObject3(), key, p);\n        })));\n      } else {\n        definedProp = codegen_1.nil;\n      }\n\n      if (patProps.length) {\n        definedProp = (0, codegen_1.or).apply(void 0, [definedProp].concat(_toConsumableArray(patProps.map(function (p) {\n          return (0, codegen_1._)(_templateObject4(), (0, code_1.usePattern)(cxt, p), key);\n        }))));\n      }\n\n      return (0, codegen_1.not)(definedProp);\n    }\n\n    function deleteAdditional(key) {\n      gen.code((0, codegen_1._)(_templateObject5(), data, key));\n    }\n\n    function additionalPropertyCode(key) {\n      if (opts.removeAdditional === \"all\" || opts.removeAdditional && schema === false) {\n        deleteAdditional(key);\n        return;\n      }\n\n      if (schema === false) {\n        cxt.setParams({\n          additionalProperty: key\n        });\n        cxt.error();\n        if (!allErrors) gen.break();\n        return;\n      }\n\n      if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        var valid = gen.name(\"valid\");\n\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false);\n          gen.if((0, codegen_1.not)(valid), function () {\n            cxt.reset();\n            deleteAdditional(key);\n          });\n        } else {\n          applyAdditionalSchema(key, valid);\n          if (!allErrors) gen.if((0, codegen_1.not)(valid), function () {\n            return gen.break();\n          });\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key, valid, errors) {\n      var subschema = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: util_1.Type.Str\n      };\n\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false\n        });\n      }\n\n      cxt.subschema(subschema, valid);\n    }\n  }\n\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/additionalProperties.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map"]},"metadata":{},"sourceType":"script"}