{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\nvar useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em'\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem'\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important'\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem'\n  }\n});\nvar initialData = {\n  name: 'Amanda',\n  description: 'Long description'\n};\nvar jsonSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1\n    },\n    description: {\n      title: 'Long Description',\n      type: 'string'\n    }\n  },\n  required: ['name', 'due_date']\n};\nvar uiJsonSchema = {\n  type: 'VerticalLayout',\n  elements: [{\n    type: 'Control',\n    scope: '#/properties/name'\n  }, {\n    type: 'Control',\n    scope: '#/properties/description',\n    options: {\n      multi: true\n    }\n  }]\n};\nvar renderers = [].concat(_toConsumableArray(materialRenderers), [{\n  tester: ratingControlTester,\n  renderer: RatingControl\n}]);\n\nvar App = function App() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var stringifiedData = useMemo(function () {\n    return JSON.stringify(data, null, 2);\n  }, [data]);\n  var stringifiedJsonSchema = useMemo(function () {\n    return JSON.stringify(jsonSchema, null, 2);\n  }, [data]);\n  var stringifiedUiJsonSchema = useMemo(function () {\n    return JSON.stringify(uiJsonSchema, null, 2);\n  }, [data]);\n\n  var clearData = function clearData() {\n    setData({});\n  };\n\n  var addNewField = function addNewField() {\n    setData({}); // Read in the schema JSON File\n    // Edit it\n    // Read in the UI schema\n    // Edit it\n    // Write out these files\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: 'center',\n      spacing: 1,\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          backgroundColor: '#eeeeee'\n        },\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"Survey Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"JSON Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            font: '10px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedJsonSchema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"UI Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedUiJsonSchema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"Rendered Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.demoform,\n          children: [/*#__PURE__*/_jsxDEV(JsonForms, {\n            schema: jsonSchema,\n            uischema: uiJsonSchema,\n            data: data,\n            renderers: renderers,\n            cells: materialCells,\n            onChange: function onChange(_ref) {\n              var errors = _ref.errors,\n                  data = _ref.data;\n              return setData(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blueButton\",\n            onClick: addNewField,\n            children: \"Add New Text Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"+keV9vs+cKAEt8HszxSDKikFQKo=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx"],"names":["Fragment","useState","useMemo","JsonForms","Grid","Typography","materialCells","materialRenderers","RatingControl","ratingControlTester","makeStyles","useStyles","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialData","name","description","jsonSchema","type","properties","minLength","required","uiJsonSchema","elements","scope","options","multi","renderers","tester","renderer","App","classes","data","setData","stringifiedData","JSON","stringify","stringifiedJsonSchema","stringifiedUiJsonSchema","clearData","addNewField","font","errors"],"mappings":"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","sourcesContent":["import { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n});\n\nconst initialData = {\n  name: 'Amanda',\n  description: 'Long description',\n};\n\nconst jsonSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    description: {\n      title: 'Long Description',\n      type: 'string',\n    },\n  },\n  required: ['name', 'due_date'],\n};\n\nconst uiJsonSchema = {\n  type: 'VerticalLayout',\n  elements: [\n    {\n      type: 'Control',\n      scope: '#/properties/name',\n    },\n    {\n      type: 'Control',\n      scope: '#/properties/description',\n      options: {\n        multi: true,\n      },\n    },\n  ],\n};\n\nconst renderers = [\n  ...materialRenderers,\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<any>(initialData);\n  const stringifiedData = useMemo(() => JSON.stringify(data, null, 2), [data]);\n  const stringifiedJsonSchema = useMemo(\n    () => JSON.stringify(jsonSchema, null, 2),\n    [data]\n  );\n  const stringifiedUiJsonSchema = useMemo(\n    () => JSON.stringify(uiJsonSchema, null, 2),\n    [data]\n  );\n\n  const clearData = () => {\n    setData({});\n  };\n\n  const addNewField = () => {\n    setData({});\n    // Read in the schema JSON File\n    // Edit it\n    // Read in the UI schema\n    // Edit it\n    // Write out these files\n  };\n\n  return (\n    <Fragment>\n      <Grid\n        container\n        justifyContent={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid style={{ backgroundColor: '#eeeeee' }} item sm={6}>\n          <Typography variant={'h6'} className={classes.title}>\n            Survey Data\n          </Typography>\n          <div className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedData}</pre>\n          </div>\n          <Typography variant={'h6'} className={classes.title}>\n            JSON Schema\n          </Typography>\n          <div style={{ font: '10px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedJsonSchema}</pre>\n          </div>\n          <Typography variant={'h6'} className={classes.title}>\n            UI Schema\n          </Typography>\n          <div className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedUiJsonSchema}</pre>\n          </div>\n        </Grid>\n        <Grid item sm={6}>\n          <Typography variant={'h6'} className={classes.title}>\n            Rendered Form\n          </Typography>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={jsonSchema}\n              uischema={uiJsonSchema}\n              data={data}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => setData(data)}\n            />\n            <button className='blueButton' onClick={addNewField}>\n              Add New Text Field\n            </button>\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}