{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport ToggleControl from '../src/CustomToggle/ToggleControl';\nimport toggleControlTester from '../src/CustomToggle/toggleControlTester';\nimport { makeStyles } from '@mui/styles';\nimport CustomGroupRenderer, { myGroupTester } from './customLayout';\nvar counter = 1;\nvar useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em'\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem'\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important'\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem'\n  }\n});\nvar initialData = {\n  name: 'Amanda',\n  description: 'Long description'\n};\nvar initialJsonSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1\n    },\n    description: {\n      title: 'Long Description',\n      type: 'string'\n    }\n  },\n  required: ['name', 'due_date']\n};\nvar initialUiJsonSchema = {\n  type: 'VerticalLayout',\n  elements: [{\n    type: 'Control',\n    scope: '#/properties/name'\n  }, {\n    type: 'Control',\n    scope: '#/properties/description',\n    options: {\n      multi: true\n    }\n  }]\n};\nvar renderers1 = [].concat(_toConsumableArray(materialRenderers), [{\n  tester: ratingControlTester,\n  renderer: RatingControl\n}]);\nvar renderers2 = [].concat(_toConsumableArray(materialRenderers), [{\n  tester: myGroupTester,\n  renderer: CustomGroupRenderer\n}, {\n  tester: toggleControlTester,\n  renderer: ToggleControl\n}]);\n\nvar App = function App() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      useCustom = _useState4[0],\n      setUseCustom = _useState4[1];\n\n  var _useState5 = useState(initialJsonSchema),\n      _useState6 = _slicedToArray(_useState5, 2),\n      jsonSchema = _useState6[0],\n      setJsonSchema = _useState6[1];\n\n  var _useState7 = useState(initialUiJsonSchema),\n      _useState8 = _slicedToArray(_useState7, 2),\n      uiJsonSchema = _useState8[0],\n      setuiJsonSchema = _useState8[1];\n\n  var stringifiedData = JSON.stringify(data, null, 2);\n  var stringifiedJsonSchema = JSON.stringify(jsonSchema, null, 2);\n  var stringifiedUiJsonSchema = JSON.stringify(uiJsonSchema, null, 2);\n\n  var loadCustomGroupExample = function loadCustomGroupExample() {\n    setUseCustom(true);\n  };\n  /**********************************************************************\n   Custom CL Component example\n  **********************************************************************/\n\n\n  var loadCustomClExample = function loadCustomClExample() {\n    setUseCustom(true);\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        toggle: {\n          type: 'boolean',\n          description: 'The \"toggle\" option renders boolean values as a toggle.'\n        }\n      },\n      required: []\n    });\n    setuiJsonSchema({\n      type: 'VerticalLayout',\n      elements: [{\n        type: 'Control',\n        scope: '#/properties/toggle',\n        label: 'Toggle label set by user',\n        uiDescription: 'other description value',\n        options: {\n          toggle: true\n        }\n      }]\n    });\n  };\n  /**********************************************************************\n   Extended controls example\n  **********************************************************************/\n\n\n  var loadExtendedControlsExample = function loadExtendedControlsExample() {\n    setUseCustom(false);\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        multilineString: {\n          type: 'string',\n          description: 'Multiline Example'\n        },\n        slider: {\n          type: 'number',\n          minimum: 1,\n          maximum: 10,\n          default: 1,\n          description: 'Slider Example'\n        },\n        trimText: {\n          type: 'string',\n          description: 'Trim indicates whether the control shall grab the full width available'\n        },\n        restrictText: {\n          type: 'string',\n          maxLength: 5,\n          description: 'Restricts the input length to the set value (in this case: 5)'\n        },\n        unfocusedDescription: {\n          type: 'string',\n          description: 'This description is shown even when the control is not focused'\n        },\n        toggle: {\n          type: 'boolean',\n          description: 'The \"toggle\" option renders boolean values as a toggle.'\n        }\n      },\n      required: ['hideRequiredAsterisk', 'restrictText']\n    });\n    setuiJsonSchema({\n      type: 'VerticalLayout',\n      elements: [{\n        type: 'Control',\n        scope: '#/properties/multilineString',\n        options: {\n          multi: true\n        }\n      }, {\n        type: 'Control',\n        scope: '#/properties/slider',\n        options: {\n          slider: true\n        }\n      }, {\n        type: 'Control',\n        scope: '#/properties/trimText',\n        options: {\n          trim: true\n        }\n      }, {\n        type: 'Control',\n        scope: '#/properties/restrictText',\n        options: {\n          restrict: true\n        }\n      }, {\n        type: 'Control',\n        scope: '#/properties/unfocusedDescription',\n        options: {\n          showUnfocusedDescription: true\n        }\n      }, {\n        type: 'Control',\n        scope: '#/properties/toggle',\n        label: 'Boolean as Toggle',\n        options: {\n          toggle: true\n        }\n      }]\n    });\n  };\n  /**********************************************************************\n   Multi-step example\n  **********************************************************************/\n\n\n  var loadStepperExample = function loadStepperExample() {\n    setUseCustom(false);\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        firstName: {\n          type: 'string',\n          minLength: 3,\n          description: 'Please enter your first name'\n        },\n        secondName: {\n          type: 'string',\n          minLength: 3,\n          description: 'Please enter your second name'\n        },\n        vegetarian: {\n          type: 'boolean'\n        },\n        birthDate: {\n          type: 'string',\n          format: 'date',\n          description: 'Please enter your birth date.'\n        },\n        nationality: {\n          type: 'string',\n          enum: ['DE', 'IT', 'JP', 'US', 'RU', 'Other']\n        },\n        provideAddress: {\n          type: 'boolean'\n        },\n        address: {\n          type: 'object',\n          properties: {\n            street: {\n              type: 'string'\n            },\n            streetNumber: {\n              type: 'string'\n            },\n            city: {\n              type: 'string'\n            },\n            postalCode: {\n              type: 'string',\n              maxLength: 5\n            }\n          }\n        },\n        vegetarianOptions: {\n          type: 'object',\n          properties: {\n            vegan: {\n              type: 'boolean'\n            },\n            favoriteVegetable: {\n              type: 'string',\n              enum: ['Tomato', 'Potato', 'Salad', 'Aubergine', 'Cucumber', 'Other']\n            },\n            otherFavoriteVegetable: {\n              type: 'string'\n            }\n          }\n        }\n      }\n    });\n    setuiJsonSchema({\n      type: 'Categorization',\n      elements: [{\n        type: 'Category',\n        label: 'Basic Information',\n        elements: [{\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/firstName'\n          }, {\n            type: 'Control',\n            scope: '#/properties/secondName'\n          }]\n        }, {\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/birthDate'\n          }, {\n            type: 'Control',\n            scope: '#/properties/nationality'\n          }]\n        }, {\n          type: 'Control',\n          scope: '#/properties/provideAddress'\n        }, {\n          type: 'Control',\n          scope: '#/properties/vegetarian'\n        }]\n      }, {\n        type: 'Category',\n        label: 'Address',\n        elements: [{\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/address/properties/street'\n          }, {\n            type: 'Control',\n            scope: '#/properties/address/properties/streetNumber'\n          }]\n        }, {\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/address/properties/city'\n          }, {\n            type: 'Control',\n            scope: '#/properties/address/properties/postalCode'\n          }]\n        }],\n        rule: {\n          effect: 'SHOW',\n          condition: {\n            scope: '#/properties/provideAddress',\n            schema: {\n              const: true\n            }\n          }\n        }\n      }, {\n        type: 'Category',\n        label: 'Additional',\n        elements: [{\n          type: 'Control',\n          scope: '#/properties/vegetarianOptions/properties/vegan'\n        }, {\n          type: 'Control',\n          scope: '#/properties/vegetarianOptions/properties/favoriteVegetable'\n        }, {\n          type: 'Control',\n          scope: '#/properties/vegetarianOptions/properties/otherFavoriteVegetable',\n          rule: {\n            effect: 'SHOW',\n            condition: {\n              scope: '#/properties/vegetarianOptions/properties/favoriteVegetable',\n              schema: {\n                const: 'Other'\n              }\n            }\n          }\n        }],\n        rule: {\n          effect: 'SHOW',\n          condition: {\n            scope: '#/properties/vegetarian',\n            schema: {\n              const: true\n            }\n          }\n        }\n      }],\n      options: {\n        variant: 'stepper',\n        showNavButtons: true\n      }\n    });\n    setData({});\n  };\n  /**********************************************************************\n   Load in the multi-step example schema\n  **********************************************************************/\n\n\n  var loadMultistepExample = function loadMultistepExample() {\n    setUseCustom(false);\n    setuiJsonSchema({\n      type: 'VerticalLayout',\n      elements: [{\n        type: 'Group',\n        label: 'Person',\n        elements: [{\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/person/properties/firstName'\n          }, {\n            type: 'Control',\n            scope: '#/properties/person/properties/lastName'\n          }]\n        }, {\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/person/properties/age'\n          }, {\n            type: 'Control',\n            label: 'Address',\n            scope: '#/properties/person/properties/shippingAddress'\n          }]\n        }]\n      }, {\n        type: 'Group',\n        label: 'Address',\n        elements: [{\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/person/properties/shippingAddress'\n          }, {\n            type: 'Control',\n            scope: '#/properties/address/properties/street'\n          }]\n        }, {\n          type: 'HorizontalLayout',\n          elements: [{\n            type: 'Control',\n            scope: '#/properties/address/properties/city'\n          }, {\n            type: 'Control',\n            scope: '#/properties/address/properties/zipCode'\n          }]\n        }],\n        rule: {\n          effect: 'SHOW',\n          condition: {\n            scope: '#/properties/person/properties/shippingAddress',\n            schema: {\n              const: 'Home Address 1'\n            }\n          }\n        }\n      }]\n    });\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        person: {\n          title: 'Person',\n          type: 'object',\n          description: 'This is the description of a section.',\n          properties: {\n            firstName: {\n              type: 'string'\n            },\n            lastName: {\n              type: 'string'\n            },\n            age: {\n              description: 'Age in years',\n              type: 'integer',\n              minimum: 0\n            },\n            shippingAddress: {\n              $ref: '#/properties/address/properties/addressId'\n            }\n          },\n          required: ['firstName', 'lastName']\n        },\n        address: {\n          title: 'Order',\n          type: 'object',\n          properties: {\n            addressId: {\n              type: 'string',\n              label: 'Address Type',\n              enum: ['Home Address 1', 'Home Address 2', 'Workplace']\n            },\n            street: {\n              type: 'string'\n            },\n            city: {\n              type: 'string'\n            },\n            zipCode: {\n              type: 'string'\n            }\n          }\n        }\n      }\n    });\n    setData({});\n  };\n  /**********************************************************************\n   Add field with a rule\n  **********************************************************************/\n\n\n  var addFieldWithRule = function addFieldWithRule() {\n    setUseCustom(false);\n    var newJsonSchema = jsonSchema;\n    var newField = 'newField' + counter.toString() + ' w Rule';\n    newJsonSchema.properties[newField] = {\n      type: 'string',\n      minLength: 1\n    };\n    var temp = {};\n    Object.assign(temp, newJsonSchema);\n    setJsonSchema(temp); // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n    var newUiSchema = uiJsonSchema;\n    var newScope = '#/properties/' + newField;\n    newUiSchema.elements.push({\n      type: 'Control',\n      scope: newScope,\n      rule: {\n        effect: 'HIDE',\n        condition: {\n          scope: '#/properties/name',\n          schema: {\n            const: 'John'\n          }\n        }\n      }\n    });\n    setuiJsonSchema(newUiSchema);\n    counter++;\n  };\n  /**********************************************************************\n   Reset\n  **********************************************************************/\n\n\n  var reset = function reset() {\n    setUseCustom(false);\n    setData(initialData);\n    var temp = {};\n    Object.assign(temp, initialJsonSchema);\n    setJsonSchema(temp);\n    var temp2 = {};\n    Object.assign(temp2, initialUiJsonSchema);\n    setuiJsonSchema(temp2);\n  };\n  /**********************************************************************\n   Add new text or number field\n  **********************************************************************/\n\n\n  var addNewField = function addNewField(type) {\n    setUseCustom(false);\n\n    if (type === 'text') {\n      var newJsonSchema = jsonSchema;\n      var newField = 'newField' + counter.toString() + ': Text';\n      newJsonSchema.properties[newField] = {\n        type: 'string',\n        minLength: 1\n      };\n      var temp = {};\n      Object.assign(temp, newJsonSchema);\n      setJsonSchema(temp); // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      var newUiSchema = uiJsonSchema;\n      var newScope = '#/properties/' + newField;\n      newUiSchema.elements.push({\n        type: 'Control',\n        scope: newScope\n      });\n      setuiJsonSchema(newUiSchema);\n    }\n\n    if (type === 'number') {\n      var _newJsonSchema = jsonSchema;\n\n      var _newField = 'newField' + counter.toString() + ': Number';\n\n      _newJsonSchema.properties[_newField] = {\n        type: 'number'\n      };\n      var _temp = {};\n      Object.assign(_temp, _newJsonSchema);\n      setJsonSchema(_temp); // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      var _newUiSchema = uiJsonSchema;\n\n      var _newScope = '#/properties/' + _newField;\n\n      _newUiSchema.elements.push({\n        type: 'Control',\n        scope: _newScope\n      });\n\n      setuiJsonSchema(_newUiSchema);\n    }\n\n    counter++;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: 'center',\n      spacing: 1,\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          backgroundColor: '#eeeeee'\n        },\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"Survey Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"JSON Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedJsonSchema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"UI Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedUiJsonSchema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"greyButton\",\n          onClick: function onClick() {\n            return loadMultistepExample();\n          },\n          children: \"Load Multi-step Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"greyButton\",\n          onClick: function onClick() {\n            return loadCustomGroupExample();\n          },\n          children: \"Load Custom Layout Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"greyButton\",\n          onClick: function onClick() {\n            return loadStepperExample();\n          },\n          children: \"Load Stepper Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"greyButton\",\n          onClick: function onClick() {\n            return loadExtendedControlsExample();\n          },\n          children: \"Load Extended Controls Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"greyButton\",\n          onClick: function onClick() {\n            return loadCustomClExample();\n          },\n          children: \"Load Custom CL Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"greyButton\",\n          onClick: function onClick() {\n            return reset();\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"Rendered Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.demoform,\n          children: [/*#__PURE__*/_jsxDEV(JsonForms, {\n            schema: jsonSchema,\n            uischema: uiJsonSchema,\n            data: data,\n            renderers: useCustom ? renderers2 : renderers1,\n            cells: materialCells,\n            onChange: function onChange(_ref) {\n              var errors = _ref.errors,\n                  data = _ref.data;\n              return setData(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'light-grey'\n            },\n            children: \"___________________________________________________________________________\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blueButton\",\n            onClick: function onClick() {\n              return addNewField('text');\n            },\n            children: \"Add Text Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"orangeButton\",\n            onClick: function onClick() {\n              return addNewField('number');\n            },\n            children: \"Add Number Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"greenButton\",\n            onClick: addFieldWithRule,\n            children: \"Add Field With Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 676,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"ThVZtCyKoGzqiRlFLwTIDszRH7U=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx"],"names":["Fragment","useState","JsonForms","Grid","Typography","materialCells","materialRenderers","RatingControl","ratingControlTester","ToggleControl","toggleControlTester","makeStyles","CustomGroupRenderer","myGroupTester","counter","useStyles","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialData","name","description","initialJsonSchema","type","properties","minLength","required","initialUiJsonSchema","elements","scope","options","multi","renderers1","tester","renderer","renderers2","App","classes","data","setData","useCustom","setUseCustom","jsonSchema","setJsonSchema","uiJsonSchema","setuiJsonSchema","stringifiedData","JSON","stringify","stringifiedJsonSchema","stringifiedUiJsonSchema","loadCustomGroupExample","loadCustomClExample","toggle","label","uiDescription","loadExtendedControlsExample","multilineString","slider","minimum","maximum","default","trimText","restrictText","maxLength","unfocusedDescription","trim","restrict","showUnfocusedDescription","loadStepperExample","firstName","secondName","vegetarian","birthDate","format","nationality","enum","provideAddress","address","street","streetNumber","city","postalCode","vegetarianOptions","vegan","favoriteVegetable","otherFavoriteVegetable","rule","effect","condition","schema","const","variant","showNavButtons","loadMultistepExample","person","lastName","age","shippingAddress","$ref","addressId","zipCode","addFieldWithRule","newJsonSchema","newField","toString","temp","Object","assign","newUiSchema","newScope","push","reset","temp2","addNewField","fontSize","errors","color"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport ToggleControl from '../src/CustomToggle/ToggleControl';\nimport toggleControlTester from '../src/CustomToggle/toggleControlTester';\nimport { makeStyles } from '@mui/styles';\n\nimport CustomGroupRenderer, { myGroupTester } from './customLayout';\n\nlet counter = 1;\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n});\n\nconst initialData = {\n  name: 'Amanda',\n  description: 'Long description',\n};\n\nconst initialJsonSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    description: {\n      title: 'Long Description',\n      type: 'string',\n    },\n  },\n  required: ['name', 'due_date'],\n};\n\nconst initialUiJsonSchema = {\n  type: 'VerticalLayout',\n  elements: [\n    {\n      type: 'Control',\n      scope: '#/properties/name',\n    },\n    {\n      type: 'Control',\n      scope: '#/properties/description',\n      options: {\n        multi: true,\n      },\n    },\n  ],\n};\n\nconst renderers1 = [\n  ...materialRenderers,\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst renderers2 = [\n  ...materialRenderers,\n  { tester: myGroupTester, renderer: CustomGroupRenderer },\n  { tester: toggleControlTester, renderer: ToggleControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<any>(initialData);\n  const [useCustom, setUseCustom] = useState<any>(false);\n  const [jsonSchema, setJsonSchema] = useState<any>(initialJsonSchema);\n  const [uiJsonSchema, setuiJsonSchema] = useState<any>(initialUiJsonSchema);\n\n  const stringifiedData = JSON.stringify(data, null, 2);\n  const stringifiedJsonSchema = JSON.stringify(jsonSchema, null, 2);\n  const stringifiedUiJsonSchema = JSON.stringify(uiJsonSchema, null, 2);\n\n  const loadCustomGroupExample = () => {\n    setUseCustom(true);\n  };\n\n  /**********************************************************************\n   Custom CL Component example\n  **********************************************************************/\n  const loadCustomClExample = () => {\n    setUseCustom(true);\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        toggle: {\n          type: 'boolean',\n          description:\n            'The \"toggle\" option renders boolean values as a toggle.',\n        },\n      },\n      required: [],\n    });\n\n    setuiJsonSchema({\n      type: 'VerticalLayout',\n      elements: [\n        {\n          type: 'Control',\n          scope: '#/properties/toggle',\n          label: 'Toggle label set by user',\n          uiDescription: 'other description value',\n          options: {\n            toggle: true,\n          },\n        },\n      ],\n    });\n  };\n  /**********************************************************************\n   Extended controls example\n  **********************************************************************/\n  const loadExtendedControlsExample = () => {\n    setUseCustom(false);\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        multilineString: {\n          type: 'string',\n          description: 'Multiline Example',\n        },\n        slider: {\n          type: 'number',\n          minimum: 1,\n          maximum: 10,\n          default: 1,\n          description: 'Slider Example',\n        },\n        trimText: {\n          type: 'string',\n          description:\n            'Trim indicates whether the control shall grab the full width available',\n        },\n        restrictText: {\n          type: 'string',\n          maxLength: 5,\n          description:\n            'Restricts the input length to the set value (in this case: 5)',\n        },\n        unfocusedDescription: {\n          type: 'string',\n          description:\n            'This description is shown even when the control is not focused',\n        },\n        toggle: {\n          type: 'boolean',\n          description:\n            'The \"toggle\" option renders boolean values as a toggle.',\n        },\n      },\n      required: ['hideRequiredAsterisk', 'restrictText'],\n    });\n\n    setuiJsonSchema({\n      type: 'VerticalLayout',\n      elements: [\n        {\n          type: 'Control',\n          scope: '#/properties/multilineString',\n          options: {\n            multi: true,\n          },\n        },\n        {\n          type: 'Control',\n          scope: '#/properties/slider',\n          options: {\n            slider: true,\n          },\n        },\n        {\n          type: 'Control',\n          scope: '#/properties/trimText',\n          options: {\n            trim: true,\n          },\n        },\n        {\n          type: 'Control',\n          scope: '#/properties/restrictText',\n          options: {\n            restrict: true,\n          },\n        },\n        {\n          type: 'Control',\n          scope: '#/properties/unfocusedDescription',\n          options: {\n            showUnfocusedDescription: true,\n          },\n        },\n        {\n          type: 'Control',\n          scope: '#/properties/toggle',\n          label: 'Boolean as Toggle',\n          options: {\n            toggle: true,\n          },\n        },\n      ],\n    });\n  };\n\n  /**********************************************************************\n   Multi-step example\n  **********************************************************************/\n  const loadStepperExample = () => {\n    setUseCustom(false);\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        firstName: {\n          type: 'string',\n          minLength: 3,\n          description: 'Please enter your first name',\n        },\n        secondName: {\n          type: 'string',\n          minLength: 3,\n          description: 'Please enter your second name',\n        },\n        vegetarian: {\n          type: 'boolean',\n        },\n        birthDate: {\n          type: 'string',\n          format: 'date',\n          description: 'Please enter your birth date.',\n        },\n        nationality: {\n          type: 'string',\n          enum: ['DE', 'IT', 'JP', 'US', 'RU', 'Other'],\n        },\n        provideAddress: {\n          type: 'boolean',\n        },\n        address: {\n          type: 'object',\n          properties: {\n            street: {\n              type: 'string',\n            },\n            streetNumber: {\n              type: 'string',\n            },\n            city: {\n              type: 'string',\n            },\n            postalCode: {\n              type: 'string',\n              maxLength: 5,\n            },\n          },\n        },\n        vegetarianOptions: {\n          type: 'object',\n          properties: {\n            vegan: {\n              type: 'boolean',\n            },\n            favoriteVegetable: {\n              type: 'string',\n              enum: [\n                'Tomato',\n                'Potato',\n                'Salad',\n                'Aubergine',\n                'Cucumber',\n                'Other',\n              ],\n            },\n            otherFavoriteVegetable: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    });\n\n    setuiJsonSchema({\n      type: 'Categorization',\n      elements: [\n        {\n          type: 'Category',\n          label: 'Basic Information',\n          elements: [\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/firstName',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/secondName',\n                },\n              ],\n            },\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/birthDate',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/nationality',\n                },\n              ],\n            },\n            {\n              type: 'Control',\n              scope: '#/properties/provideAddress',\n            },\n            {\n              type: 'Control',\n              scope: '#/properties/vegetarian',\n            },\n          ],\n        },\n        {\n          type: 'Category',\n          label: 'Address',\n          elements: [\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/street',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/streetNumber',\n                },\n              ],\n            },\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/city',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/postalCode',\n                },\n              ],\n            },\n          ],\n          rule: {\n            effect: 'SHOW',\n            condition: {\n              scope: '#/properties/provideAddress',\n              schema: {\n                const: true,\n              },\n            },\n          },\n        },\n        {\n          type: 'Category',\n          label: 'Additional',\n          elements: [\n            {\n              type: 'Control',\n              scope: '#/properties/vegetarianOptions/properties/vegan',\n            },\n            {\n              type: 'Control',\n              scope:\n                '#/properties/vegetarianOptions/properties/favoriteVegetable',\n            },\n            {\n              type: 'Control',\n              scope:\n                '#/properties/vegetarianOptions/properties/otherFavoriteVegetable',\n              rule: {\n                effect: 'SHOW',\n                condition: {\n                  scope:\n                    '#/properties/vegetarianOptions/properties/favoriteVegetable',\n                  schema: {\n                    const: 'Other',\n                  },\n                },\n              },\n            },\n          ],\n          rule: {\n            effect: 'SHOW',\n            condition: {\n              scope: '#/properties/vegetarian',\n              schema: {\n                const: true,\n              },\n            },\n          },\n        },\n      ],\n      options: {\n        variant: 'stepper',\n        showNavButtons: true,\n      },\n    });\n\n    setData({});\n  };\n\n  /**********************************************************************\n   Load in the multi-step example schema\n  **********************************************************************/\n  const loadMultistepExample = () => {\n    setUseCustom(false);\n    setuiJsonSchema({\n      type: 'VerticalLayout',\n      elements: [\n        {\n          type: 'Group',\n          label: 'Person',\n          elements: [\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/person/properties/firstName',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/person/properties/lastName',\n                },\n              ],\n            },\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/person/properties/age',\n                },\n                {\n                  type: 'Control',\n                  label: 'Address',\n                  scope: '#/properties/person/properties/shippingAddress',\n                },\n              ],\n            },\n          ],\n        },\n        {\n          type: 'Group',\n          label: 'Address',\n          elements: [\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/person/properties/shippingAddress',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/street',\n                },\n              ],\n            },\n            {\n              type: 'HorizontalLayout',\n              elements: [\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/city',\n                },\n                {\n                  type: 'Control',\n                  scope: '#/properties/address/properties/zipCode',\n                },\n              ],\n            },\n          ],\n          rule: {\n            effect: 'SHOW',\n            condition: {\n              scope: '#/properties/person/properties/shippingAddress',\n              schema: {\n                const: 'Home Address 1',\n              },\n            },\n          },\n        },\n      ],\n    });\n\n    setJsonSchema({\n      type: 'object',\n      properties: {\n        person: {\n          title: 'Person',\n          type: 'object',\n          description: 'This is the description of a section.',\n          properties: {\n            firstName: {\n              type: 'string',\n            },\n            lastName: {\n              type: 'string',\n            },\n            age: {\n              description: 'Age in years',\n              type: 'integer',\n              minimum: 0,\n            },\n            shippingAddress: {\n              $ref: '#/properties/address/properties/addressId',\n            },\n          },\n          required: ['firstName', 'lastName'],\n        },\n        address: {\n          title: 'Order',\n          type: 'object',\n          properties: {\n            addressId: {\n              type: 'string',\n              label: 'Address Type',\n              enum: ['Home Address 1', 'Home Address 2', 'Workplace'],\n            },\n            street: {\n              type: 'string',\n            },\n            city: {\n              type: 'string',\n            },\n            zipCode: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    });\n\n    setData({});\n  };\n\n  /**********************************************************************\n   Add field with a rule\n  **********************************************************************/\n  const addFieldWithRule = () => {\n    setUseCustom(false);\n    let newJsonSchema = jsonSchema;\n    const newField = 'newField' + counter.toString() + ' w Rule';\n    newJsonSchema.properties[newField] = {\n      type: 'string',\n      minLength: 1,\n    };\n    const temp = {};\n    Object.assign(temp, newJsonSchema);\n    setJsonSchema(temp);\n    // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n    const newUiSchema = uiJsonSchema;\n    const newScope = '#/properties/' + newField;\n    newUiSchema.elements.push({\n      type: 'Control',\n      scope: newScope,\n      rule: {\n        effect: 'HIDE',\n        condition: {\n          scope: '#/properties/name',\n          schema: {\n            const: 'John',\n          },\n        },\n      },\n    });\n    setuiJsonSchema(newUiSchema);\n    counter++;\n  };\n\n  /**********************************************************************\n   Reset\n  **********************************************************************/\n  const reset = () => {\n    setUseCustom(false);\n    setData(initialData);\n    const temp = {};\n    Object.assign(temp, initialJsonSchema);\n    setJsonSchema(temp);\n    const temp2 = {};\n    Object.assign(temp2, initialUiJsonSchema);\n    setuiJsonSchema(temp2);\n  };\n  /**********************************************************************\n   Add new text or number field\n  **********************************************************************/\n  const addNewField = (type: string) => {\n    setUseCustom(false);\n    if (type === 'text') {\n      let newJsonSchema = jsonSchema;\n      const newField = 'newField' + counter.toString() + ': Text';\n      newJsonSchema.properties[newField] = {\n        type: 'string',\n        minLength: 1,\n      };\n      const temp = {};\n      Object.assign(temp, newJsonSchema);\n      setJsonSchema(temp);\n      // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      const newUiSchema = uiJsonSchema;\n      const newScope = '#/properties/' + newField;\n      newUiSchema.elements.push({\n        type: 'Control',\n        scope: newScope,\n      });\n      setuiJsonSchema(newUiSchema);\n    }\n    if (type === 'number') {\n      let newJsonSchema = jsonSchema;\n      const newField = 'newField' + counter.toString() + ': Number';\n      newJsonSchema.properties[newField] = {\n        type: 'number',\n      };\n      const temp = {};\n      Object.assign(temp, newJsonSchema);\n      setJsonSchema(temp);\n      // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      const newUiSchema = uiJsonSchema;\n      const newScope = '#/properties/' + newField;\n      newUiSchema.elements.push({\n        type: 'Control',\n        scope: newScope,\n      });\n      setuiJsonSchema(newUiSchema);\n    }\n    counter++;\n  };\n\n  return (\n    <Fragment>\n      <Grid\n        container\n        justifyContent={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid style={{ backgroundColor: '#eeeeee' }} item sm={6}>\n          <Typography variant={'h6'} className={classes.title}>\n            Survey Data\n          </Typography>\n          <div style={{ fontSize: '12px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedData}</pre>\n          </div>\n          <Typography variant={'h6'} className={classes.title}>\n            JSON Schema\n          </Typography>\n          <div style={{ fontSize: '12px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedJsonSchema}</pre>\n          </div>\n          <Typography variant={'h6'} className={classes.title}>\n            UI Schema\n          </Typography>\n          <div style={{ fontSize: '12px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedUiJsonSchema}</pre>\n          </div>\n        </Grid>\n        <Grid item sm={6}>\n          <button className='greyButton' onClick={() => loadMultistepExample()}>\n            Load Multi-step Example\n          </button>\n          <button\n            className='greyButton'\n            onClick={() => loadCustomGroupExample()}\n          >\n            Load Custom Layout Example\n          </button>\n          <button className='greyButton' onClick={() => loadStepperExample()}>\n            Load Stepper Example\n          </button>\n          <button\n            className='greyButton'\n            onClick={() => loadExtendedControlsExample()}\n          >\n            Load Extended Controls Example\n          </button>\n          <button className='greyButton' onClick={() => loadCustomClExample()}>\n            Load Custom CL Example\n          </button>\n          <button className='greyButton' onClick={() => reset()}>\n            Reset\n          </button>\n          <Typography variant={'h6'} className={classes.title}>\n            Rendered Form\n          </Typography>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={jsonSchema}\n              uischema={uiJsonSchema}\n              data={data}\n              renderers={useCustom ? renderers2 : renderers1}\n              cells={materialCells}\n              onChange={({ errors, data }) => setData(data)}\n            />\n            <span style={{ color: 'light-grey' }}>\n              ___________________________________________________________________________\n            </span>\n            <br></br>\n            <button className='blueButton' onClick={() => addNewField('text')}>\n              Add Text Field\n            </button>\n            <button\n              className='orangeButton'\n              onClick={() => addNewField('number')}\n            >\n              Add Number Field\n            </button>\n            <button className='greenButton' onClick={addFieldWithRule}>\n              Add Field With Rule\n            </button>\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}