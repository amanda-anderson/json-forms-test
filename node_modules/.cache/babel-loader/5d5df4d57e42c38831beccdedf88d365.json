{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\nvar counter = 1;\nvar useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em'\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem'\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important'\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem'\n  }\n});\nvar initialData = {\n  name: 'Amanda',\n  description: 'Long description'\n};\nvar initialJsonSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1\n    },\n    description: {\n      title: 'Long Description',\n      type: 'string'\n    }\n  },\n  required: ['name', 'due_date']\n};\nvar initialUiJsonSchema = {\n  type: 'VerticalLayout',\n  elements: [{\n    type: 'Control',\n    scope: '#/properties/name'\n  }, {\n    type: 'Control',\n    scope: '#/properties/description',\n    options: {\n      multi: true\n    }\n  }]\n};\nvar renderers = [].concat(_toConsumableArray(materialRenderers), [{\n  tester: ratingControlTester,\n  renderer: RatingControl\n}]);\n\nvar App = function App() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(initialJsonSchema),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jsonSchema = _useState4[0],\n      setJsonSchema = _useState4[1];\n\n  var _useState5 = useState(initialUiJsonSchema),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uiJsonSchema = _useState6[0],\n      setuiJsonSchema = _useState6[1];\n\n  var stringifiedData = useMemo(function () {\n    return JSON.stringify(data, null, 2);\n  }, [data]);\n  var stringifiedJsonSchema = JSON.stringify(jsonSchema, null, 2);\n  var stringifiedUiJsonSchema = JSON.stringify(uiJsonSchema, null, 2);\n\n  var addFieldWithRule = function addFieldWithRule() {\n    var newJsonSchema = jsonSchema;\n    var newField = 'newField' + counter.toString();\n    newJsonSchema.properties[newField] = {\n      type: 'string',\n      minLength: 1\n    };\n    var temp = {};\n    Object.assign(temp, newJsonSchema);\n    setJsonSchema(temp); // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n    var newUiSchema = uiJsonSchema;\n    var newScope = '#/properties/' + newField;\n    newUiSchema.elements.push({\n      type: 'Control',\n      scope: newScope,\n      rule: {\n        effect: 'HIDE',\n        condition: {\n          scope: '#/properties/name',\n          schema: {\n            const: 'John'\n          }\n        }\n      }\n    });\n    setuiJsonSchema(newUiSchema);\n    counter++;\n  };\n\n  var addNewField = function addNewField(type) {\n    if (type === 'text') {\n      var newJsonSchema = jsonSchema;\n      var newField = 'newField' + counter.toString();\n      newJsonSchema.properties[newField] = {\n        type: 'string',\n        minLength: 1\n      };\n      var temp = {};\n      Object.assign(temp, newJsonSchema);\n      setJsonSchema(temp); // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      var newUiSchema = uiJsonSchema;\n      var newScope = '#/properties/' + newField;\n      newUiSchema.elements.push({\n        type: 'Control',\n        scope: newScope\n      });\n      setuiJsonSchema(newUiSchema);\n    }\n\n    if (type === 'number') {\n      var _newJsonSchema = jsonSchema;\n\n      var _newField = 'newField' + counter.toString();\n\n      _newJsonSchema.properties[_newField] = {\n        type: 'number'\n      };\n      var _temp = {};\n      Object.assign(_temp, _newJsonSchema);\n      setJsonSchema(_temp); // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      var _newUiSchema = uiJsonSchema;\n\n      var _newScope = '#/properties/' + _newField;\n\n      _newUiSchema.elements.push({\n        type: 'Control',\n        scope: _newScope\n      });\n\n      setuiJsonSchema(_newUiSchema);\n    }\n\n    counter++;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: 'center',\n      spacing: 1,\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          backgroundColor: '#eeeeee'\n        },\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"Survey Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"JSON Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedJsonSchema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"UI Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          className: classes.dataContent,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"boundData\",\n            children: stringifiedUiJsonSchema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          className: classes.title,\n          children: \"Rendered Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.demoform,\n          children: [/*#__PURE__*/_jsxDEV(JsonForms, {\n            schema: jsonSchema,\n            uischema: uiJsonSchema,\n            data: data,\n            renderers: renderers,\n            cells: materialCells,\n            onChange: function onChange(_ref) {\n              var errors = _ref.errors,\n                  data = _ref.data;\n              return setData(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blueButton\",\n            onClick: addNewField('text'),\n            children: \"Add Text Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"orangeButton\",\n            onClick: addNewField('number'),\n            children: \"Add Number Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"greenButton\",\n            onClick: addFieldWithRule,\n            children: \"Add Field With Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"i/fzCPlKP+fP/24jYniVKJkRPiY=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/src/App.tsx"],"names":["Fragment","useState","useMemo","JsonForms","Grid","Typography","materialCells","materialRenderers","RatingControl","ratingControlTester","makeStyles","counter","useStyles","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialData","name","description","initialJsonSchema","type","properties","minLength","required","initialUiJsonSchema","elements","scope","options","multi","renderers","tester","renderer","App","classes","data","setData","jsonSchema","setJsonSchema","uiJsonSchema","setuiJsonSchema","stringifiedData","JSON","stringify","stringifiedJsonSchema","stringifiedUiJsonSchema","addFieldWithRule","newJsonSchema","newField","toString","temp","Object","assign","newUiSchema","newScope","push","rule","effect","condition","schema","const","addNewField","fontSize","errors"],"mappings":"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","sourcesContent":["import { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './App.css';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\n\nlet counter = 1;\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n});\n\nconst initialData = {\n  name: 'Amanda',\n  description: 'Long description',\n};\n\nconst initialJsonSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    description: {\n      title: 'Long Description',\n      type: 'string',\n    },\n  },\n  required: ['name', 'due_date'],\n};\n\nconst initialUiJsonSchema = {\n  type: 'VerticalLayout',\n  elements: [\n    {\n      type: 'Control',\n      scope: '#/properties/name',\n    },\n    {\n      type: 'Control',\n      scope: '#/properties/description',\n      options: {\n        multi: true,\n      },\n    },\n  ],\n};\n\nconst renderers = [\n  ...materialRenderers,\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<any>(initialData);\n  const [jsonSchema, setJsonSchema] = useState<any>(initialJsonSchema);\n  const [uiJsonSchema, setuiJsonSchema] = useState<any>(initialUiJsonSchema);\n\n  const stringifiedData = useMemo(() => JSON.stringify(data, null, 2), [data]);\n  const stringifiedJsonSchema = JSON.stringify(jsonSchema, null, 2);\n  const stringifiedUiJsonSchema = JSON.stringify(uiJsonSchema, null, 2);\n\n  const addFieldWithRule = () => {\n    let newJsonSchema = jsonSchema;\n    const newField = 'newField' + counter.toString();\n    newJsonSchema.properties[newField] = {\n      type: 'string',\n      minLength: 1,\n    };\n    const temp = {};\n    Object.assign(temp, newJsonSchema);\n    setJsonSchema(temp);\n    // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n    const newUiSchema = uiJsonSchema;\n    const newScope = '#/properties/' + newField;\n    newUiSchema.elements.push({\n      type: 'Control',\n      scope: newScope,\n      rule: {\n        effect: 'HIDE',\n        condition: {\n          scope: '#/properties/name',\n          schema: {\n            const: 'John',\n          },\n        },\n      },\n    });\n    setuiJsonSchema(newUiSchema);\n    counter++;\n  };\n\n  const addNewField = (type) => {\n    if (type === 'text') {\n      let newJsonSchema = jsonSchema;\n      const newField = 'newField' + counter.toString();\n      newJsonSchema.properties[newField] = {\n        type: 'string',\n        minLength: 1,\n      };\n      const temp = {};\n      Object.assign(temp, newJsonSchema);\n      setJsonSchema(temp);\n      // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      const newUiSchema = uiJsonSchema;\n      const newScope = '#/properties/' + newField;\n      newUiSchema.elements.push({\n        type: 'Control',\n        scope: newScope,\n      });\n      setuiJsonSchema(newUiSchema);\n    }\n    if (type === 'number') {\n      let newJsonSchema = jsonSchema;\n      const newField = 'newField' + counter.toString();\n      newJsonSchema.properties[newField] = {\n        type: 'number',\n      };\n      const temp = {};\n      Object.assign(temp, newJsonSchema);\n      setJsonSchema(temp);\n      // https://github.com/rjsf-team/react-jsonschema-form/issues/517\n\n      const newUiSchema = uiJsonSchema;\n      const newScope = '#/properties/' + newField;\n      newUiSchema.elements.push({\n        type: 'Control',\n        scope: newScope,\n      });\n      setuiJsonSchema(newUiSchema);\n    }\n    counter++;\n  };\n\n  return (\n    <Fragment>\n      <Grid\n        container\n        justifyContent={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid style={{ backgroundColor: '#eeeeee' }} item sm={6}>\n          <Typography variant={'h6'} className={classes.title}>\n            Survey Data\n          </Typography>\n          <div style={{ fontSize: '12px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedData}</pre>\n          </div>\n          <Typography variant={'h6'} className={classes.title}>\n            JSON Schema\n          </Typography>\n          <div style={{ fontSize: '12px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedJsonSchema}</pre>\n          </div>\n          <Typography variant={'h6'} className={classes.title}>\n            UI Schema\n          </Typography>\n          <div style={{ fontSize: '12px' }} className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedUiJsonSchema}</pre>\n          </div>\n        </Grid>\n        <Grid item sm={6}>\n          <Typography variant={'h6'} className={classes.title}>\n            Rendered Form\n          </Typography>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={jsonSchema}\n              uischema={uiJsonSchema}\n              data={data}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => setData(data)}\n            />\n            <button className='blueButton' onClick={addNewField('text')}>\n              Add Text Field\n            </button>\n            <button className='orangeButton' onClick={addNewField('number')}>\n              Add Number Field\n            </button>\n            <button className='greenButton' onClick={addFieldWithRule}>\n              Add Field With Rule\n            </button>\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}