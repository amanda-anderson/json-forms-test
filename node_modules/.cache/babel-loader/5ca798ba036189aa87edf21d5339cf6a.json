{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\n\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\n\nvar isEmpty_1 = tslib_1.__importDefault(require(\"lodash/isEmpty\"));\n\nvar core_1 = require(\"@jsonforms/core\");\n\nvar react_2 = require(\"@jsonforms/react\");\n\nvar reducers_1 = require(\"../reducers\");\n\nvar styling_1 = require(\"../reducers/styling\");\n\nvar styles_1 = require(\"../styles\");\n/**\n * Add vanilla props to the return value of calling the given\n * mapStateToProps function.\n *\n * @param mapStateToProps existing mapStateToProps function\n * @returns {VanillaControlStateProps} vanilla-specific control props\n */\n\n\nexports.addVanillaControlProps = function (mapStateToProps) {\n  return function (state, ownProps) {\n    var props = mapStateToProps(state, ownProps);\n    var config = core_1.getConfig(state);\n    var trim = config.trim;\n    var controlElement = props.uischema;\n    var isValid = isEmpty_1.default(props.errors);\n    var styles = reducers_1.getStyle(state)('control');\n    var classNames = !isEmpty_1.default(controlElement.scope) ? styles.concat([\"\" + core_1.convertToValidClassName(controlElement.scope)]) : [''];\n\n    if (trim) {\n      classNames = classNames.concat(reducers_1.getStyle(state)('control.trim'));\n    }\n\n    var labelClass = reducers_1.getStyleAsClassName(state)('control.label');\n    var descriptionClassName = reducers_1.getStyleAsClassName(state)('input.description');\n    var validationClassName = reducers_1.getStyleAsClassName(state)('control.validation');\n    var validationErrorClassName = reducers_1.getStyleAsClassName(state)('control.validation.error');\n    var inputClassName = ['validate'].concat(isValid ? 'valid' : 'invalid');\n    return tslib_1.__assign(tslib_1.__assign({}, props), {\n      getStyleAsClassName: reducers_1.getStyleAsClassName(state),\n      getStyle: reducers_1.getStyle(state),\n      classNames: {\n        wrapper: classNames.join(' '),\n        input: inputClassName.join(' '),\n        label: labelClass,\n        description: descriptionClassName,\n        validation: validationClassName,\n        validationError: validationErrorClassName\n      }\n    });\n  };\n};\n\nexports.withVanillaControlProps = function (Component) {\n  return function (props) {\n    var ctx = react_2.useJsonForms();\n    var contextStyles = styles_1.useStyles();\n    var controlElement = props.uischema;\n    var config = ctx.config;\n    var trim = config && config.trim;\n    var styles = styling_1.findStyle(contextStyles)('control');\n    var classNames = !isEmpty_1.default(controlElement.scope) ? styles.concat([\"\" + core_1.convertToValidClassName(controlElement.scope)]) : [''];\n\n    if (trim) {\n      classNames = classNames.concat(styling_1.findStyle(contextStyles)('control.trim'));\n    }\n\n    var isValid = isEmpty_1.default(props.errors);\n    var labelClass = styling_1.findStyleAsClassName(contextStyles)('control.label');\n    var descriptionClassName = styling_1.findStyleAsClassName(contextStyles)('input.description');\n    var validationClassName = styling_1.findStyleAsClassName(contextStyles)('control.validation');\n    var validationErrorClassName = styling_1.findStyleAsClassName(contextStyles)('control.validation.error');\n    var inputClassName = ['validate'].concat(isValid ? 'valid' : 'invalid');\n    return react_1.default.createElement(Component, tslib_1.__assign({}, props, {\n      getStyleAsClassName: styling_1.findStyleAsClassName(contextStyles),\n      getStyle: styling_1.findStyle(contextStyles),\n      classNames: {\n        wrapper: classNames.join(' '),\n        input: inputClassName.join(' '),\n        label: labelClass,\n        description: descriptionClassName,\n        validation: validationClassName,\n        validationError: validationErrorClassName\n      }\n    }));\n  };\n};\n/**\n * Add vanilla props to the return value of calling the given\n * mapStateToProps function.\n *\n * @param mapStateToProps an existing mapStateToProps function for retrieving layout props\n * @returns {VanillaLayoutProps} vanilla specific layout props\n */\n\n\nexports.addVanillaLayoutProps = function (mapStateToProps) {\n  return function (state, ownProps) {\n    var props = mapStateToProps(state, ownProps);\n    return tslib_1.__assign(tslib_1.__assign({}, props), {\n      getStyleAsClassName: reducers_1.getStyleAsClassName(state),\n      getStyle: reducers_1.getStyle(state)\n    });\n  };\n};\n\nexports.addVanillaCellProps = function (mapStateToCellsProps) {\n  return function (state, ownProps) {\n    var props = mapStateToCellsProps(state, ownProps);\n    var inputClassName = ['validate'].concat(props.isValid ? 'valid' : 'invalid');\n    return tslib_1.__assign(tslib_1.__assign({}, props), {\n      className: inputClassName.join(' '),\n      getStyleAsClassName: reducers_1.getStyleAsClassName(state),\n      getStyle: reducers_1.getStyle(state)\n    });\n  };\n};\n\nvar withVanillaCellPropsForType = function withVanillaCellPropsForType(type) {\n  return function (Component) {\n    return function (props) {\n      var inputClassName = ['validate'].concat(props.isValid ? 'valid' : 'invalid');\n      var styles = styles_1.useStyles();\n      var definedStyle = styling_1.findStyleAsClassName(styles)(type);\n\n      if (definedStyle) {\n        inputClassName.push(definedStyle);\n      }\n\n      return react_1.default.createElement(Component, tslib_1.__assign({}, props, {\n        getStyleAsClassName: styling_1.findStyleAsClassName(styles),\n        getStyle: styling_1.findStyle(styles),\n        className: inputClassName.join(' ')\n      }));\n    };\n  };\n};\n\nexports.withVanillaCellProps = withVanillaCellPropsForType('control.input');\nexports.withVanillaEnumCellProps = withVanillaCellPropsForType('control.select');","map":{"version":3,"sources":["../../src/util/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\nvar isEmpty_1 = tslib_1.__importDefault(require(\"lodash/isEmpty\"));\nvar core_1 = require(\"@jsonforms/core\");\nvar react_2 = require(\"@jsonforms/react\");\nvar reducers_1 = require(\"../reducers\");\nvar styling_1 = require(\"../reducers/styling\");\nvar styles_1 = require(\"../styles\");\n/**\n * Add vanilla props to the return value of calling the given\n * mapStateToProps function.\n *\n * @param mapStateToProps existing mapStateToProps function\n * @returns {VanillaControlStateProps} vanilla-specific control props\n */\nexports.addVanillaControlProps = function (mapStateToProps) { return function (state, ownProps) {\n    var props = mapStateToProps(state, ownProps);\n    var config = core_1.getConfig(state);\n    var trim = config.trim;\n    var controlElement = props.uischema;\n    var isValid = isEmpty_1.default(props.errors);\n    var styles = reducers_1.getStyle(state)('control');\n    var classNames = !isEmpty_1.default(controlElement.scope)\n        ? styles.concat([\"\" + core_1.convertToValidClassName(controlElement.scope)])\n        : [''];\n    if (trim) {\n        classNames = classNames.concat(reducers_1.getStyle(state)('control.trim'));\n    }\n    var labelClass = reducers_1.getStyleAsClassName(state)('control.label');\n    var descriptionClassName = reducers_1.getStyleAsClassName(state)('input.description');\n    var validationClassName = reducers_1.getStyleAsClassName(state)('control.validation');\n    var validationErrorClassName = reducers_1.getStyleAsClassName(state)('control.validation.error');\n    var inputClassName = ['validate'].concat(isValid ? 'valid' : 'invalid');\n    return tslib_1.__assign(tslib_1.__assign({}, props), { getStyleAsClassName: reducers_1.getStyleAsClassName(state), getStyle: reducers_1.getStyle(state), classNames: {\n            wrapper: classNames.join(' '),\n            input: inputClassName.join(' '),\n            label: labelClass,\n            description: descriptionClassName,\n            validation: validationClassName,\n            validationError: validationErrorClassName\n        } });\n}; };\nexports.withVanillaControlProps = function (Component) { return function (props) {\n    var ctx = react_2.useJsonForms();\n    var contextStyles = styles_1.useStyles();\n    var controlElement = props.uischema;\n    var config = ctx.config;\n    var trim = config && config.trim;\n    var styles = styling_1.findStyle(contextStyles)('control');\n    var classNames = !isEmpty_1.default(controlElement.scope)\n        ? styles.concat([\"\" + core_1.convertToValidClassName(controlElement.scope)])\n        : [''];\n    if (trim) {\n        classNames = classNames.concat(styling_1.findStyle(contextStyles)('control.trim'));\n    }\n    var isValid = isEmpty_1.default(props.errors);\n    var labelClass = styling_1.findStyleAsClassName(contextStyles)('control.label');\n    var descriptionClassName = styling_1.findStyleAsClassName(contextStyles)('input.description');\n    var validationClassName = styling_1.findStyleAsClassName(contextStyles)('control.validation');\n    var validationErrorClassName = styling_1.findStyleAsClassName(contextStyles)('control.validation.error');\n    var inputClassName = ['validate'].concat(isValid ? 'valid' : 'invalid');\n    return (react_1.default.createElement(Component, tslib_1.__assign({}, props, { getStyleAsClassName: styling_1.findStyleAsClassName(contextStyles), getStyle: styling_1.findStyle(contextStyles), classNames: {\n            wrapper: classNames.join(' '),\n            input: inputClassName.join(' '),\n            label: labelClass,\n            description: descriptionClassName,\n            validation: validationClassName,\n            validationError: validationErrorClassName\n        } })));\n}; };\n/**\n * Add vanilla props to the return value of calling the given\n * mapStateToProps function.\n *\n * @param mapStateToProps an existing mapStateToProps function for retrieving layout props\n * @returns {VanillaLayoutProps} vanilla specific layout props\n */\nexports.addVanillaLayoutProps = function (mapStateToProps) { return function (state, ownProps) {\n    var props = mapStateToProps(state, ownProps);\n    return tslib_1.__assign(tslib_1.__assign({}, props), { getStyleAsClassName: reducers_1.getStyleAsClassName(state), getStyle: reducers_1.getStyle(state) });\n}; };\nexports.addVanillaCellProps = function (mapStateToCellsProps) { return function (state, ownProps) {\n    var props = mapStateToCellsProps(state, ownProps);\n    var inputClassName = ['validate'].concat(props.isValid ? 'valid' : 'invalid');\n    return tslib_1.__assign(tslib_1.__assign({}, props), { className: inputClassName.join(' '), getStyleAsClassName: reducers_1.getStyleAsClassName(state), getStyle: reducers_1.getStyle(state) });\n}; };\nvar withVanillaCellPropsForType = function (type) { return function (Component) { return function (props) {\n    var inputClassName = ['validate'].concat(props.isValid ? 'valid' : 'invalid');\n    var styles = styles_1.useStyles();\n    var definedStyle = styling_1.findStyleAsClassName(styles)(type);\n    if (definedStyle) {\n        inputClassName.push(definedStyle);\n    }\n    return (react_1.default.createElement(Component, tslib_1.__assign({}, props, { getStyleAsClassName: styling_1.findStyleAsClassName(styles), getStyle: styling_1.findStyle(styles), className: inputClassName.join(' ') })));\n}; }; };\nexports.withVanillaCellProps = withVanillaCellPropsForType('control.input');\nexports.withVanillaEnumCellProps = withVanillaCellPropsForType('control.select');\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}