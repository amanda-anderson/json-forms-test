{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _taggedTemplateLiteral = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _createForOfIteratorHelper = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\"\\\"/\\\" + \", \".replace(/~/g, \\\"~0\\\").replace(/\\\\//g, \\\"~1\\\")\"], [\"\\\"/\\\" + \", \".replace(/~/g, \\\"~0\\\").replace(/\\\\\\\\//g, \\\"~1\\\")\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\"\\\"/\\\" + \", \"\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\\"['\\\" + \", \" + \\\"']\\\"\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\\"[\\\" + \", \" + \\\"]\\\"\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\", \"\", \"\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"{}\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\", \" > \", \" ? \", \" : \", \"\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\", \" !== true\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\", \" === true ? true : \", \" > \", \" ? \", \" : \", \"\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\", \" !== true && \", \" !== undefined\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\", \" || {}\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\", \" !== true\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"Object.assign(\", \", \", \")\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \" || {}\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \" === true\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \" !== true && \", \" !== undefined\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\", \"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\n\nvar codegen_1 = require(\"./codegen\");\n\nvar code_1 = require(\"./codegen/code\"); // TODO refactor to use Set\n\n\nfunction toHash(arr) {\n  var hash = {};\n\n  var _iterator = _createForOfIteratorHelper(arr),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      hash[item] = true;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return hash;\n}\n\nexports.toHash = toHash;\n\nfunction alwaysValidSchema(it, schema) {\n  if (typeof schema == \"boolean\") return schema;\n  if (Object.keys(schema).length === 0) return true;\n  checkUnknownRules(it, schema);\n  return !schemaHasRules(schema, it.self.RULES.all);\n}\n\nexports.alwaysValidSchema = alwaysValidSchema;\n\nfunction checkUnknownRules(it) {\n  var schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : it.schema;\n  var opts = it.opts,\n      self = it.self;\n  if (!opts.strictSchema) return;\n  if (typeof schema === \"boolean\") return;\n  var rules = self.RULES.keywords;\n\n  for (var key in schema) {\n    if (!rules[key]) checkStrictMode(it, \"unknown keyword: \\\"\".concat(key, \"\\\"\"));\n  }\n}\n\nexports.checkUnknownRules = checkUnknownRules;\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == \"boolean\") return !schema;\n\n  for (var key in schema) {\n    if (rules[key]) return true;\n  }\n\n  return false;\n}\n\nexports.schemaHasRules = schemaHasRules;\n\nfunction schemaHasRulesButRef(schema, RULES) {\n  if (typeof schema == \"boolean\") return !schema;\n\n  for (var key in schema) {\n    if (key !== \"$ref\" && RULES.all[key]) return true;\n  }\n\n  return false;\n}\n\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\n\nfunction schemaRefOrVal(_ref, schema, keyword, $data) {\n  var topSchemaRef = _ref.topSchemaRef,\n      schemaPath = _ref.schemaPath;\n\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema;\n    if (typeof schema == \"string\") return (0, codegen_1._)(_templateObject(), schema);\n  }\n\n  return (0, codegen_1._)(_templateObject2(), topSchemaRef, schemaPath, (0, codegen_1.getProperty)(keyword));\n}\n\nexports.schemaRefOrVal = schemaRefOrVal;\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\nexports.unescapeFragment = unescapeFragment;\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\nexports.escapeFragment = escapeFragment;\n\nfunction escapeJsonPointer(str) {\n  if (typeof str == \"number\") return \"\".concat(str);\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n\nexports.escapeJsonPointer = escapeJsonPointer;\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\nexports.unescapeJsonPointer = unescapeJsonPointer;\n\nfunction eachItem(xs, f) {\n  if (Array.isArray(xs)) {\n    var _iterator2 = _createForOfIteratorHelper(xs),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var x = _step2.value;\n        f(x);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  } else {\n    f(xs);\n  }\n}\n\nexports.eachItem = eachItem;\n\nfunction makeMergeEvaluated(_ref2) {\n  var mergeNames = _ref2.mergeNames,\n      mergeToName = _ref2.mergeToName,\n      mergeValues = _ref2.mergeValues,\n      resultToName = _ref2.resultToName;\n  return function (gen, from, to, toName) {\n    var res = to === undefined ? from : to instanceof codegen_1.Name ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to) : from instanceof codegen_1.Name ? (mergeToName(gen, to, from), from) : mergeValues(from, to);\n    return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n  };\n}\n\nexports.mergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: function mergeNames(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject3(), to, from), function () {\n        gen.if((0, codegen_1._)(_templateObject4(), from), function () {\n          return gen.assign(to, true);\n        }, function () {\n          return gen.assign(to, (0, codegen_1._)(_templateObject5(), to)).code((0, codegen_1._)(_templateObject6(), to, from));\n        });\n      });\n    },\n    mergeToName: function mergeToName(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject7(), to), function () {\n        if (from === true) {\n          gen.assign(to, true);\n        } else {\n          gen.assign(to, (0, codegen_1._)(_templateObject8(), to));\n          setEvaluated(gen, to, from);\n        }\n      });\n    },\n    mergeValues: function mergeValues(from, to) {\n      return from === true ? true : _objectSpread(_objectSpread({}, from), to);\n    },\n    resultToName: evaluatedPropsToName\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: function mergeNames(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject9(), to, from), function () {\n        return gen.assign(to, (0, codegen_1._)(_templateObject10(), from, to, from, to, from));\n      });\n    },\n    mergeToName: function mergeToName(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject11(), to), function () {\n        return gen.assign(to, from === true ? true : (0, codegen_1._)(_templateObject12(), to, from, to, from));\n      });\n    },\n    mergeValues: function mergeValues(from, to) {\n      return from === true ? true : Math.max(from, to);\n    },\n    resultToName: function resultToName(gen, items) {\n      return gen.var(\"items\", items);\n    }\n  })\n};\n\nfunction evaluatedPropsToName(gen, ps) {\n  if (ps === true) return gen.var(\"props\", true);\n  var props = gen.var(\"props\", (0, codegen_1._)(_templateObject13()));\n  if (ps !== undefined) setEvaluated(gen, props, ps);\n  return props;\n}\n\nexports.evaluatedPropsToName = evaluatedPropsToName;\n\nfunction setEvaluated(gen, props, ps) {\n  Object.keys(ps).forEach(function (p) {\n    return gen.assign((0, codegen_1._)(_templateObject14(), props, (0, codegen_1.getProperty)(p)), true);\n  });\n}\n\nexports.setEvaluated = setEvaluated;\nvar snippets = {};\n\nfunction useFunc(gen, f) {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code))\n  });\n}\n\nexports.useFunc = useFunc;\nvar Type;\n\n(function (Type) {\n  Type[Type[\"Num\"] = 0] = \"Num\";\n  Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\n\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n  // let path\n  if (dataProp instanceof codegen_1.Name) {\n    var isNumber = dataPropType === Type.Num;\n    return jsPropertySyntax ? isNumber ? (0, codegen_1._)(_templateObject15(), dataProp) : (0, codegen_1._)(_templateObject16(), dataProp) : isNumber ? (0, codegen_1._)(_templateObject17(), dataProp) : (0, codegen_1._)(_templateObject18(), dataProp); // TODO maybe use global escapePointer\n  }\n\n  return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\n\nexports.getErrorPath = getErrorPath;\n\nfunction checkStrictMode(it, msg) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : it.opts.strictSchema;\n  if (!mode) return;\n  msg = \"strict mode: \".concat(msg);\n  if (mode === true) throw new Error(msg);\n  it.self.logger.warn(msg);\n}\n\nexports.checkStrictMode = checkStrictMode;","map":{"version":3,"sources":["../../lib/compile/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}