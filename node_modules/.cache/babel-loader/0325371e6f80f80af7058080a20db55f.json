{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"{limit: \", \"}\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"must NOT have more than \", \" items\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar code_1 = require(\"../code\");\n\nvar additionalItems_1 = require(\"./additionalItems\");\n\nvar error = {\n  message: function message(_ref) {\n    var len = _ref.params.len;\n    return (0, codegen_1.str)(_templateObject(), len);\n  },\n  params: function params(_ref2) {\n    var len = _ref2.params.len;\n    return (0, codegen_1._)(_templateObject2(), len);\n  }\n};\nvar def = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n\n  code(cxt) {\n    var schema = cxt.schema,\n        parentSchema = cxt.parentSchema,\n        it = cxt.it;\n    var prefixItems = parentSchema.prefixItems;\n    it.items = true;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    if (prefixItems) (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);else cxt.ok((0, code_1.validateArray)(cxt));\n  }\n\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/items2020.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAIA,IAAM,KAAK,GAA2B;AACpC,EAAA,OAAO,EAAE;AAAA,QAAW,GAAX,QAAE,MAAF,CAAW,GAAX;AAAA,YAAqB,GAAA,SAAA,CAAA,GAArB,qBAAmD,GAAnD;AAAA,GAD2B;AAEpC,EAAA,MAAM,EAAE;AAAA,QAAW,GAAX,SAAE,MAAF,CAAW,GAAX;AAAA,YAAqB,GAAA,SAAA,CAAA,CAArB,sBAAiC,GAAjC;AAAA;AAF4B,CAAtC;AAKA,IAAM,GAAG,GAA0B;AACjC,EAAA,OAAO,EAAE,OADwB;AAEjC,EAAA,IAAI,EAAE,OAF2B;AAGjC,EAAA,UAAU,EAAE,CAAC,QAAD,EAAW,SAAX,CAHqB;AAIjC,EAAA,MAAM,EAAE,aAJyB;AAKjC,EAAA,KALiC;;AAMjC,EAAA,IAAI,CAAC,GAAD,EAAgB;AAAA,QACX,MADW,GACiB,GADjB,CACX,MADW;AAAA,QACH,YADG,GACiB,GADjB,CACH,YADG;AAAA,QACW,EADX,GACiB,GADjB,CACW,EADX;AAAA,QAEX,WAFW,GAEI,YAFJ,CAEX,WAFW;AAGlB,IAAA,EAAE,CAAC,KAAH,GAAW,IAAX;AACA,QAAI,CAAA,GAAA,MAAA,CAAA,iBAAA,EAAkB,EAAlB,EAAsB,MAAtB,CAAJ,EAAmC;AACnC,QAAI,WAAJ,EAAiB,CAAA,GAAA,iBAAA,CAAA,uBAAA,EAAwB,GAAxB,EAA6B,WAA7B,EAAjB,KACK,GAAG,CAAC,EAAJ,CAAO,CAAA,GAAA,MAAA,CAAA,aAAA,EAAc,GAAd,CAAP;AACN;;AAbgC,CAAnC;AAgBA,OAAA,CAAA,OAAA,GAAe,GAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map"]},"metadata":{},"sourceType":"script"}