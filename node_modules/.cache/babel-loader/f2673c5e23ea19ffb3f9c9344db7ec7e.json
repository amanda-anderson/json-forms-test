{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \" !== \", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"!\", \"(\", \", \", \")\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"{allowedValue: \", \"}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar equal_1 = require(\"../../runtime/equal\");\n\nvar error = {\n  message: \"must be equal to constant\",\n  params: function params(_ref) {\n    var schemaCode = _ref.schemaCode;\n    return (0, codegen_1._)(_templateObject(), schemaCode);\n  }\n};\nvar def = {\n  keyword: \"const\",\n  $data: true,\n  error,\n\n  code(cxt) {\n    var gen = cxt.gen,\n        data = cxt.data,\n        $data = cxt.$data,\n        schemaCode = cxt.schemaCode,\n        schema = cxt.schema;\n\n    if ($data || schema && typeof schema == \"object\") {\n      cxt.fail$data((0, codegen_1._)(_templateObject2(), (0, util_1.useFunc)(gen, equal_1.default), data, schemaCode));\n    } else {\n      cxt.fail((0, codegen_1._)(_templateObject3(), schema, data));\n    }\n  }\n\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/validation/const.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAIA,IAAM,KAAK,GAA2B;AACpC,EAAA,OAAO,EAAE,2BAD2B;AAEpC,EAAA,MAAM,EAAE;AAAA,QAAE,UAAF,QAAE,UAAF;AAAA,YAAkB,GAAA,SAAA,CAAA,CAAlB,qBAAqC,UAArC;AAAA;AAF4B,CAAtC;AAKA,IAAM,GAAG,GAA0B;AACjC,EAAA,OAAO,EAAE,OADwB;AAEjC,EAAA,KAAK,EAAE,IAF0B;AAGjC,EAAA,KAHiC;;AAIjC,EAAA,IAAI,CAAC,GAAD,EAAgB;AAAA,QACX,GADW,GAC6B,GAD7B,CACX,GADW;AAAA,QACN,IADM,GAC6B,GAD7B,CACN,IADM;AAAA,QACA,KADA,GAC6B,GAD7B,CACA,KADA;AAAA,QACO,UADP,GAC6B,GAD7B,CACO,UADP;AAAA,QACmB,MADnB,GAC6B,GAD7B,CACmB,MADnB;;AAElB,QAAI,KAAK,IAAK,MAAM,IAAI,OAAO,MAAP,IAAiB,QAAzC,EAAoD;AAClD,MAAA,GAAG,CAAC,SAAJ,EAAc,GAAA,SAAA,CAAA,CAAd,sBAAmB,CAAA,GAAA,MAAA,CAAA,OAAA,EAAQ,GAAR,EAAa,OAAA,CAAA,OAAb,CAAnB,EAA0C,IAA1C,EAAmD,UAAnD;AACD,KAFD,MAEO;AACL,MAAA,GAAG,CAAC,IAAJ,EAAS,GAAA,SAAA,CAAA,CAAT,sBAAa,MAAb,EAA2B,IAA3B;AACD;AACF;;AAXgC,CAAnC;AAcA,OAAA,CAAA,OAAA,GAAe,GAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map"]},"metadata":{},"sourceType":"script"}