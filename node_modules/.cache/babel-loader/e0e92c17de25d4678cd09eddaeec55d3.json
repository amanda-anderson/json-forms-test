{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _taggedTemplateLiteral = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _createClass = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \"\", \"\", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \"\", \" \", \" = \", \";\", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \"\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\"], [\"\\\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\".\", \"[\", \"]\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\n\nvar code_1 = require(\"./code\");\n\nvar ValueError = /*#__PURE__*/function (_Error) {\n  _inherits(ValueError, _Error);\n\n  var _super = _createSuper(ValueError);\n\n  function ValueError(name) {\n    var _this;\n\n    _classCallCheck(this, ValueError);\n\n    _this = _super.call(this, \"CodeGen: \\\"code\\\" for \".concat(name, \" not defined\"));\n    _this.value = name.value;\n    return _this;\n  }\n\n  return ValueError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar UsedValueState;\n\n(function (UsedValueState) {\n  UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n  UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\n\nexports.varKinds = {\n  const: new code_1.Name(\"const\"),\n  let: new code_1.Name(\"let\"),\n  var: new code_1.Name(\"var\")\n};\n\nvar Scope = /*#__PURE__*/function () {\n  function Scope() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        prefixes = _ref.prefixes,\n        parent = _ref.parent;\n\n    _classCallCheck(this, Scope);\n\n    this._names = {};\n    this._prefixes = prefixes;\n    this._parent = parent;\n  }\n\n  _createClass(Scope, [{\n    key: \"toName\",\n    value: function toName(nameOrPrefix) {\n      return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n  }, {\n    key: \"name\",\n    value: function name(prefix) {\n      return new code_1.Name(this._newName(prefix));\n    }\n  }, {\n    key: \"_newName\",\n    value: function _newName(prefix) {\n      var ng = this._names[prefix] || this._nameGroup(prefix);\n\n      return \"\".concat(prefix).concat(ng.index++);\n    }\n  }, {\n    key: \"_nameGroup\",\n    value: function _nameGroup(prefix) {\n      var _a, _b;\n\n      if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || this._prefixes && !this._prefixes.has(prefix)) {\n        throw new Error(\"CodeGen: prefix \\\"\".concat(prefix, \"\\\" is not allowed in this scope\"));\n      }\n\n      return this._names[prefix] = {\n        prefix,\n        index: 0\n      };\n    }\n  }]);\n\n  return Scope;\n}();\n\nexports.Scope = Scope;\n\nvar ValueScopeName = /*#__PURE__*/function (_code_1$Name) {\n  _inherits(ValueScopeName, _code_1$Name);\n\n  var _super2 = _createSuper(ValueScopeName);\n\n  function ValueScopeName(prefix, nameStr) {\n    var _this2;\n\n    _classCallCheck(this, ValueScopeName);\n\n    _this2 = _super2.call(this, nameStr);\n    _this2.prefix = prefix;\n    return _this2;\n  }\n\n  _createClass(ValueScopeName, [{\n    key: \"setValue\",\n    value: function setValue(value, _ref2) {\n      var property = _ref2.property,\n          itemIndex = _ref2.itemIndex;\n      this.value = value;\n      this.scopePath = (0, code_1._)(_templateObject(), new code_1.Name(property), itemIndex);\n    }\n  }]);\n\n  return ValueScopeName;\n}(code_1.Name);\n\nexports.ValueScopeName = ValueScopeName;\nvar line = (0, code_1._)(_templateObject2());\n\nvar ValueScope = /*#__PURE__*/function (_Scope) {\n  _inherits(ValueScope, _Scope);\n\n  var _super3 = _createSuper(ValueScope);\n\n  function ValueScope(opts) {\n    var _this3;\n\n    _classCallCheck(this, ValueScope);\n\n    _this3 = _super3.call(this, opts);\n    _this3._values = {};\n    _this3._scope = opts.scope;\n    _this3.opts = _objectSpread(_objectSpread({}, opts), {}, {\n      _n: opts.lines ? line : code_1.nil\n    });\n    return _this3;\n  }\n\n  _createClass(ValueScope, [{\n    key: \"get\",\n    value: function get() {\n      return this._scope;\n    }\n  }, {\n    key: \"name\",\n    value: function name(prefix) {\n      return new ValueScopeName(prefix, this._newName(prefix));\n    }\n  }, {\n    key: \"value\",\n    value: function value(nameOrPrefix, _value) {\n      var _a;\n\n      if (_value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\");\n      var name = this.toName(nameOrPrefix);\n      var prefix = name.prefix;\n      var valueKey = (_a = _value.key) !== null && _a !== void 0 ? _a : _value.ref;\n      var vs = this._values[prefix];\n\n      if (vs) {\n        var _name = vs.get(valueKey);\n\n        if (_name) return _name;\n      } else {\n        vs = this._values[prefix] = new Map();\n      }\n\n      vs.set(valueKey, name);\n      var s = this._scope[prefix] || (this._scope[prefix] = []);\n      var itemIndex = s.length;\n      s[itemIndex] = _value.ref;\n      name.setValue(_value, {\n        property: prefix,\n        itemIndex\n      });\n      return name;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(prefix, keyOrRef) {\n      var vs = this._values[prefix];\n      if (!vs) return;\n      return vs.get(keyOrRef);\n    }\n  }, {\n    key: \"scopeRefs\",\n    value: function scopeRefs(scopeName) {\n      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._values;\n      return this._reduceValues(values, function (name) {\n        if (name.scopePath === undefined) throw new Error(\"CodeGen: name \\\"\".concat(name, \"\\\" has no value\"));\n        return (0, code_1._)(_templateObject3(), scopeName, name.scopePath);\n      });\n    }\n  }, {\n    key: \"scopeCode\",\n    value: function scopeCode() {\n      var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._values;\n      var usedValues = arguments.length > 1 ? arguments[1] : undefined;\n      var getCode = arguments.length > 2 ? arguments[2] : undefined;\n      return this._reduceValues(values, function (name) {\n        if (name.value === undefined) throw new Error(\"CodeGen: name \\\"\".concat(name, \"\\\" has no value\"));\n        return name.value.code;\n      }, usedValues, getCode);\n    }\n  }, {\n    key: \"_reduceValues\",\n    value: function _reduceValues(values, valueCode) {\n      var _this4 = this;\n\n      var usedValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var getCode = arguments.length > 3 ? arguments[3] : undefined;\n      var code = code_1.nil;\n\n      var _loop = function _loop(prefix) {\n        var vs = values[prefix];\n        if (!vs) return \"continue\";\n        var nameSet = usedValues[prefix] = usedValues[prefix] || new Map();\n        vs.forEach(function (name) {\n          if (nameSet.has(name)) return;\n          nameSet.set(name, UsedValueState.Started);\n          var c = valueCode(name);\n\n          if (c) {\n            var def = _this4.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n            code = (0, code_1._)(_templateObject4(), code, def, name, c, _this4.opts._n);\n          } else if (c = getCode === null || getCode === void 0 ? void 0 : getCode(name)) {\n            code = (0, code_1._)(_templateObject5(), code, c, _this4.opts._n);\n          } else {\n            throw new ValueError(name);\n          }\n\n          nameSet.set(name, UsedValueState.Completed);\n        });\n      };\n\n      for (var prefix in values) {\n        var _ret = _loop(prefix);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return code;\n    }\n  }]);\n\n  return ValueScope;\n}(Scope);\n\nexports.ValueScope = ValueScope;","map":{"version":3,"sources":["../../../lib/compile/codegen/scope.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map"]},"metadata":{},"sourceType":"script"}