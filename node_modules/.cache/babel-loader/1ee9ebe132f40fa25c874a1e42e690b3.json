{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/aander-cl/Documents/jsonforms/jsonforms-react-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRules = exports.isJSONType = void 0;\nvar _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nvar jsonTypes = new Set(_jsonTypes);\n\nfunction isJSONType(x) {\n  return typeof x == \"string\" && jsonTypes.has(x);\n}\n\nexports.isJSONType = isJSONType;\n\nfunction getRules() {\n  var groups = {\n    number: {\n      type: \"number\",\n      rules: []\n    },\n    string: {\n      type: \"string\",\n      rules: []\n    },\n    array: {\n      type: \"array\",\n      rules: []\n    },\n    object: {\n      type: \"object\",\n      rules: []\n    }\n  };\n  return {\n    types: _objectSpread(_objectSpread({}, groups), {}, {\n      integer: true,\n      boolean: true,\n      null: true\n    }),\n    rules: [{\n      rules: []\n    }, groups.number, groups.string, groups.array, groups.object],\n    post: {\n      rules: []\n    },\n    all: {},\n    keywords: {}\n  };\n}\n\nexports.getRules = getRules;","map":{"version":3,"sources":["../../lib/compile/rules.ts"],"names":[],"mappings":";;;;;;;;AAEA,IAAM,UAAU,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,QAAnD,EAA6D,OAA7D,CAAnB;AAIA,IAAM,SAAS,GAAgB,IAAI,GAAJ,CAAQ,UAAR,CAA/B;;AAEA,SAAgB,UAAhB,CAA2B,CAA3B,EAAqC;AACnC,SAAO,OAAO,CAAP,IAAY,QAAZ,IAAwB,SAAS,CAAC,GAAV,CAAc,CAAd,CAA/B;AACD;;AAFD,OAAA,CAAA,UAAA,GAAA,UAAA;;AA2BA,SAAgB,QAAhB,GAAwB;AACtB,MAAM,MAAM,GAAgE;AAC1E,IAAA,MAAM,EAAE;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,KAAK,EAAE;AAAxB,KADkE;AAE1E,IAAA,MAAM,EAAE;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,KAAK,EAAE;AAAxB,KAFkE;AAG1E,IAAA,KAAK,EAAE;AAAC,MAAA,IAAI,EAAE,OAAP;AAAgB,MAAA,KAAK,EAAE;AAAvB,KAHmE;AAI1E,IAAA,MAAM,EAAE;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,KAAK,EAAE;AAAxB;AAJkE,GAA5E;AAMA,SAAO;AACL,IAAA,KAAK,kCAAM,MAAN;AAAc,MAAA,OAAO,EAAE,IAAvB;AAA6B,MAAA,OAAO,EAAE,IAAtC;AAA4C,MAAA,IAAI,EAAE;AAAlD,MADA;AAEL,IAAA,KAAK,EAAE,CAAC;AAAC,MAAA,KAAK,EAAE;AAAR,KAAD,EAAc,MAAM,CAAC,MAArB,EAA6B,MAAM,CAAC,MAApC,EAA4C,MAAM,CAAC,KAAnD,EAA0D,MAAM,CAAC,MAAjE,CAFF;AAGL,IAAA,IAAI,EAAE;AAAC,MAAA,KAAK,EAAE;AAAR,KAHD;AAIL,IAAA,GAAG,EAAE,EAJA;AAKL,IAAA,QAAQ,EAAE;AALL,GAAP;AAOD;;AAdD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map"]},"metadata":{},"sourceType":"script"}