import { PureComponent, MouseEvent } from 'react';
declare type Props = {
    children?: any;
    onClick?: (event: MouseEvent) => void;
    onClickOutside: (event: MouseEvent) => void;
    onMouseEnter?: (event: MouseEvent) => void;
    onMouseLeave?: (event: MouseEvent) => void;
    onMouseDown?: (event: MouseEvent) => void;
    className?: string;
    id?: string;
    setRef?: (arg: HTMLElement) => void;
    role?: string;
    closeOnClickOutsideEnabled?: boolean;
    isModal?: boolean;
    ariaLabelledBy?: string;
};
export default class ClickOutside extends PureComponent<Props> {
    container: HTMLDivElement | null;
    static defaultProps: {
        closeOnClickOutsideEnabled: boolean;
    };
    componentDidMount(): void;
    componentDidUpdate(prevProps: Props): void;
    componentWillUnmount(): void;
    addEventListeners: () => void;
    removeEventListeners: () => void;
    handle: (event: any) => void;
    handleRef: (element: HTMLDivElement) => void;
    handleOnMouseEnter: (event: MouseEvent) => void;
    handleOnMouseLeave: (event: MouseEvent) => void;
    handleOnMouseDown: (event: MouseEvent) => void;
    render(): JSX.Element;
}
export {};
