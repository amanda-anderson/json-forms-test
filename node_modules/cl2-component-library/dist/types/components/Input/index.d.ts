import { PureComponent, FormEvent } from 'react';
import { Locale, InputSize } from '../../utils/typings';
export interface InputProps {
    ariaLabel?: string;
    id?: string;
    label?: string | JSX.Element | null;
    labelTooltipText?: string | JSX.Element | null;
    value?: string | null;
    locale?: Locale;
    type: 'text' | 'email' | 'password' | 'number' | 'date';
    placeholder?: string | null;
    error?: string | null;
    onChange?: (arg: string, locale: Locale | undefined) => void;
    onFocus?: (arg: FormEvent<HTMLInputElement>) => void;
    onBlur?: (arg: FormEvent<HTMLInputElement>) => void;
    setRef?: (arg: HTMLInputElement) => void | undefined;
    autoFocus?: boolean;
    min?: string;
    max?: string;
    name?: string;
    maxCharCount?: number;
    disabled?: boolean;
    spellCheck?: boolean;
    readOnly?: boolean;
    required?: boolean;
    autocomplete?: 'email' | 'given-name' | 'family-name' | 'current-password' | 'new-password' | 'off' | 'on';
    a11yCharactersLeftMessage?: string;
    className?: string;
    size?: InputSize;
    'data-testid'?: string;
}
declare class Input extends PureComponent<InputProps> {
    handleOnChange: (event: FormEvent<HTMLInputElement>) => void;
    handleOnBlur: (event: FormEvent<HTMLInputElement>) => void;
    handleRef: (element: HTMLInputElement) => void;
    render(): JSX.Element;
}
export default Input;
