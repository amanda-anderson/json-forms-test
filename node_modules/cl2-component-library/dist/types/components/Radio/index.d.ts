import { PureComponent, FormEvent } from 'react';
/**
 * If we have a label, an id is required. Otherwise id is optional.
 */
declare type LabelProps = {
    label: string | JSX.Element | null;
    id: string;
} | {
    label?: undefined;
    id?: string | undefined;
};
export declare type Props = LabelProps & {
    onChange?: (arg: any) => void;
    currentValue?: any;
    value: any;
    /**
     * Name should be a string that is the same for all radios of the same radio group and unique for each radio group.
     * E.g. if you have a poll with two questions and each question has four answers/radios,
     * radios of each question should have the same name, but it should be different from those
     * of the second question. See PollForm.tsx for a good example.
     */
    name: string | undefined;
    disabled?: boolean;
    buttonColor?: string | undefined;
    className?: string;
    isRequired?: boolean;
};
interface State {
    inputFocused: boolean;
}
declare class Radio extends PureComponent<Props, State> {
    constructor(props: Props);
    handleOnChange: (event: FormEvent) => void;
    handleOnFocus: () => void;
    handleOnBlur: () => void;
    render(): JSX.Element;
}
export default Radio;
