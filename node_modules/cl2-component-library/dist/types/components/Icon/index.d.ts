import { FC } from 'react';
export declare type IconNames = keyof typeof icons;
export interface Props {
    name: IconNames;
    className?: string;
    title?: string | JSX.Element;
    ariaHidden?: boolean;
    'data-testid'?: string;
}
export declare const icons: {
    close: (props: Props) => JSX.Element;
    copy: (props: Props) => JSX.Element;
    upload: (props: Props) => JSX.Element;
    'upload-file': (props: Props) => JSX.Element;
    error: (props: Props) => JSX.Element;
    eye: (props: Props) => JSX.Element;
    checkmark: (props: Props) => JSX.Element;
    'round-checkmark': (props: Props) => JSX.Element;
    halt: (props: Props) => JSX.Element;
    dropdown: (props: Props) => JSX.Element;
    'arrow-back': (props: Props) => JSX.Element;
    plus: (props: Props) => JSX.Element;
    'plus-circle': (props: Props) => JSX.Element;
    'minus-circle': (props: Props) => JSX.Element;
    delete: (props: Props) => JSX.Element;
    edit: (props: Props) => JSX.Element;
    'cancel-edit': (props: Props) => JSX.Element;
    upvote: (props: Props) => JSX.Element;
    downvote: (props: Props) => JSX.Element;
    'chevron-right': (props: Props) => JSX.Element;
    'chevron-left': (props: Props) => JSX.Element;
    'chevron-up': (props: Props) => JSX.Element;
    'chevron-down': (props: Props) => JSX.Element;
    'expand-all': (props: Props) => JSX.Element;
    'collapse-all': (props: Props) => JSX.Element;
    idea: (props: Props) => JSX.Element;
    'idea-filled': (props: Props) => JSX.Element;
    idea2: (props: Props) => JSX.Element;
    initiative: (props: Props) => JSX.Element;
    user: (props: Props) => JSX.Element;
    notification: (props: Props) => JSX.Element;
    search: (props: Props) => JSX.Element;
    lock: (props: Props) => JSX.Element;
    'lock-outlined': (props: Props) => JSX.Element;
    facebook: (props: Props) => JSX.Element;
    messenger: (props: Props) => JSX.Element;
    twitter: (props: Props) => JSX.Element;
    azureactivedirectory: (props: Props) => JSX.Element;
    google: (props: Props) => JSX.Element;
    comments: (props: Props) => JSX.Element;
    info: (props: Props) => JSX.Element;
    calendar: (props: Props) => JSX.Element;
    power: (props: Props) => JSX.Element;
    admin: (props: Props) => JSX.Element;
    settings: (props: Props) => JSX.Element;
    send: (props: Props) => JSX.Element;
    groups2: (props: Props) => JSX.Element;
    project: (props: Props) => JSX.Element;
    position: (props: Props) => JSX.Element;
    project2: (props: Props) => JSX.Element;
    notification_mention: (props: Props) => JSX.Element;
    'more-options': (props: Props) => JSX.Element;
    phase_arrow: (props: Props) => JSX.Element;
    save: (props: Props) => JSX.Element;
    saveAlt: (props: Props) => JSX.Element;
    map: (props: Props) => JSX.Element;
    mapCenter: (props: Props) => JSX.Element;
    mapmarker: (props: Props) => JSX.Element;
    point: (props: Props) => JSX.Element;
    line: (props: Props) => JSX.Element;
    rectangle: (props: Props) => JSX.Element;
    polygon: (props: Props) => JSX.Element;
    timeline: (props: Props) => JSX.Element;
    survey: (props: Props) => JSX.Element;
    download: (props: Props) => JSX.Element;
    notification_invitation_accepted: (props: Props) => JSX.Element;
    notification_status: (props: Props) => JSX.Element;
    arrowLeft: (props: Props) => JSX.Element;
    create: (props: Props) => JSX.Element;
    shield: (props: Props) => JSX.Element;
    shieldVerified: (props: Props) => JSX.Element;
    blankPage: (props: Props) => JSX.Element;
    mailBig: (props: Props) => JSX.Element;
    remove: (props: Props) => JSX.Element;
    circleInfo: (props: Props) => JSX.Element;
    paperclip: (props: Props) => JSX.Element;
    code: (props: Props) => JSX.Element;
    questionMark: (props: Props) => JSX.Element;
    questionMarkRoundedOutlined: (props: Props) => JSX.Element;
    noAvatar: (props: Props) => JSX.Element;
    completeProfile: (props: Props) => JSX.Element;
    setup: (props: Props) => JSX.Element;
    engage: (props: Props) => JSX.Element;
    manage: (props: Props) => JSX.Element;
    decide: (props: Props) => JSX.Element;
    showMore: (props: Props) => JSX.Element;
    translate: (props: Props) => JSX.Element;
    share: (props: Props) => JSX.Element;
    play: (props: Props) => JSX.Element;
    lightningBolt: (props: Props) => JSX.Element;
    database: (props: Props) => JSX.Element;
    menu: (props: Props) => JSX.Element;
    moveFolder: (props: Props) => JSX.Element;
    trash: (props: Props) => JSX.Element;
    userExport: (props: Props) => JSX.Element;
    setting: (props: Props) => JSX.Element;
    initiatives: (props: Props) => JSX.Element;
    initiativesAdminMenuIcon: (props: Props) => JSX.Element;
    folder: (props: Props) => JSX.Element;
    'folder-add': (props: Props) => JSX.Element;
    moderation: (props: Props) => JSX.Element;
    workshops: (props: Props) => JSX.Element;
    users: (props: Props) => JSX.Element;
    stats: (props: Props) => JSX.Element;
    charts: (props: Props) => JSX.Element;
    invitations: (props: Props) => JSX.Element;
    emails: (props: Props) => JSX.Element;
    email: (props: Props) => JSX.Element;
    moneybag: (props: Props) => JSX.Element;
    submit: (props: Props) => JSX.Element;
    homeFilled: (props: Props) => JSX.Element;
    info3: (props: Props) => JSX.Element;
    dot: (props: Props) => JSX.Element;
    pen: (props: Props) => JSX.Element;
    clShield: (props: Props) => JSX.Element;
    pencil: (props: Props) => JSX.Element;
    profile1: (props: Props) => JSX.Element;
    filter: (props: Props) => JSX.Element;
    successStory: (props: Props) => JSX.Element;
    clock: (props: Props) => JSX.Element;
    'clock-solid': (props: Props) => JSX.Element;
    bullseye: (props: Props) => JSX.Element;
    'envelope-check': (props: Props) => JSX.Element;
    'checkmark-full': (props: Props) => JSX.Element;
    verify_light: (props: Props) => JSX.Element;
    verify_dark: (props: Props) => JSX.Element;
    verify_manually: (props: Props) => JSX.Element;
    template: (props: Props) => JSX.Element;
    scratch: (props: Props) => JSX.Element;
    list: (props: Props) => JSX.Element;
    list2: (props: Props) => JSX.Element;
    link: (props: Props) => JSX.Element;
    purpose: (props: Props) => JSX.Element;
    participationLevel: (props: Props) => JSX.Element;
    key: (props: Props) => JSX.Element;
    indeterminate: (props: Props) => JSX.Element;
    inbox: (props: Props) => JSX.Element;
    label: (props: Props) => JSX.Element;
    labelOutlined: (props: Props) => JSX.Element;
    eyeOpened: (props: Props) => JSX.Element;
    eyeClosed: (props: Props) => JSX.Element;
    goTo: (props: Props) => JSX.Element;
    file: (props: Props) => JSX.Element;
    'file-add': (props: Props) => JSX.Element;
    simpleFolder: (props: Props) => JSX.Element;
    flag: (props: Props) => JSX.Element;
    finish_flag: (props: Props) => JSX.Element;
    person: (props: Props) => JSX.Element;
    event: (props: Props) => JSX.Element;
    basket: (props: Props) => JSX.Element;
    'basket-plus': (props: Props) => JSX.Element;
    'basket-minus': (props: Props) => JSX.Element;
    'basket-checkmark': (props: Props) => JSX.Element;
    'volunteer-hand': (props: Props) => JSX.Element;
    'unvolunteer-hand': (props: Props) => JSX.Element;
    'citizenlab-footer-logo': (props: Props) => JSX.Element;
    'circle-arrow-left': (props: Props) => JSX.Element;
    'share-arrow': (props: Props) => JSX.Element;
    whatsapp: (props: Props) => JSX.Element;
    processing: (props: Props) => JSX.Element;
    'exclamation-trapezium-strikethrough': (props: Props) => JSX.Element;
    'exclamation-trapezium': (props: Props) => JSX.Element;
    'eyeOpened-unfilled': (props: Props) => JSX.Element;
    'eyeClosed-unfilled': (props: Props) => JSX.Element;
    'filter-funnel': (props: Props) => JSX.Element;
    categories: (props: Props) => JSX.Element;
    tokens: (props: Props) => JSX.Element;
    'coin-stack': (props: Props) => JSX.Element;
    'circled-star': (props: Props) => JSX.Element;
};
declare const Icon: FC<Props>;
export default Icon;
